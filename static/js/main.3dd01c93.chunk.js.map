{"version":3,"sources":["ExtLink/ExtLink.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","RoundButton/RoundButton.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","SmartNumber/SmartNumber.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","TxProgressBar/TxProgressBar.js","theme.js","CustomField/CustomField.js","CustomList/CustomList.js","ActiveCoverages/ActiveCoverages.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","GenericSelector/GenericSelector.js","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","AssetSelector/AssetSelector.js","CardIconButton/CardIconButton.js","utilities/components/Header.module.scss","IconBox/IconBox.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","Title/Title.js","GenericChart/GenericChart.js","ExecuteTransaction/ExecuteTransaction.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","Staking/Staking.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","ConnectBox/ConnectBox.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","FlexLoader/FlexLoader.js","ImageButton/ImageButton.js","AssetField/AssetField.js"],"names":["ExtLink","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","Object","assign","target","rel","this","props","children","Component","ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","width","alignItems","flexDirection","pr","style","flexBasis","flex","justifyContent","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","RoundButton","buttonProps","boxShadow","mainColor","onClick","handleClick","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","state","text","functionsUtil","setProps","FunctionsUtil","loadUtils","loadData","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","size","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","_this","objectSpread","defineProperty","applyFilters","toggle","arguments","length","undefined","toggleOpened","resetFilter","resetFilters","_this2","top","zIndex","position","DashboardCard","cardProps","py","px","transition","isInteractive","cursor","isMobile","name","overflow","mt","borderTop","concat","theme","colors","divider","keys","filters","map","filterCategory","filterValues","key","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","Text","ml","values","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","tx","parseFloat","token","includes","sort","b","timeStamp","Math","ceil","forEach","i","selectedToken","tokenConfig","availableTokens","decimals","min","date","Date","getTxAction","parsedValue","tokenAmount","amount","toFixed","momentDate","strToMoment","push","preventDefault","max","loadTxs","transactionsChanged","JSON","stringify","transactions","enabledTokens","count","account","firstBlockNumber","getGlobalConfig","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","pop","blockNumber","parseInt","_this3","_this4","hasActiveFilters","m","FlexLoader","flexProps","minHeight","loaderProps","textProps","id","pt","src_TransactionListFilters_TransactionListFilters","bind","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","window","open","getEtherscanTransactionUrl","rowId","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","SmartNumber","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","left","data","itemPos","xFormatted","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","setStateSafe","newState","callback","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","right","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","protocolAllocationPercParsed","times","globalConfigs","stats","hsl","join","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","mobileChanged","themeModeChanged","themeMode","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","BNify","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","currentDate","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","format","frequencySeconds","_loop","aggregatedBalances","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","CustomField","fieldInfo","fieldProps","funcProps","CustomComponent","componentHasChildren","fieldType","fieldPath","path","customValue","getArrayPath","row","Image","Icon","Button","customFieldName","customFieldProps","CustomList","rows","rowIndex","Base","loaded","activeCoverages","loadCoverages","getActiveCoverages","coverages","c","collateral","statusColors","statusIcon","statusColor","statusIconProps","portfolioCoverage","Title","titleProps","src_CustomList_CustomList","fileClaimUrl","openWindow","fields","mobile","parentProps","actionLabel","actionDisabled","actionUrl","bg","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","button","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","CardIconButton","isActive","image","align","imageProps","useIconOnly","iconColor","iconProps","iconBgColor","gradientButton","empty","select","selectDark","input","IconBox","isVisible","loadField","hashChanged","accountChanged","output","bgColor","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","lineHeight","HeadingComponent","component","Heading","h1","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","loaderText","ExecuteTransaction","txStatus","console","log","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","Staking","contractInfo","selectedOption","toolProps","contract","initContract","abi","reduce","enabled","SelectedComponent","AssetField","selectToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","url","j","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","tokenBalance","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","enableERC20","executeTx","_amount","signedParameters","_params","methodParams","normalizeTokenAmount","eventValue","signPermit","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","checkTokenApproved","viewOnly","connectorName","infoBox","steps","step","stepIndex","description","required","togglePermitEnabled","balanceSelectorInfo","placeholder","approveDescription","ConnectBox","LpStaking","globalStats","balanceProp","statsLoaded","stakedBalance","rewardMultiplier","accountingData","selectedAction","successMessage","poolTokenPrice","rewardTokenPrice","tokenWrapperProps","distributionSpeed","transactionSucceeded","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","integerValue","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","initialLockedShares","durationSec","tokensPerSecond","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","txReceipt","logs","_this5","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","DAITokenConfig","getSushiswapPoolTokenPrice","getSushiswapConversionRate","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","titleParentProps","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","IdleStaking","lockPeriods","lockedEnd","lockExpired","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributorConfig","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","currTime","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","getIdleStakingRewardsTxs","getTokenTotalSupply","genericContractCallCached","getContractBalance","getContractEvents","fromBlock","toBlock","provider","etherscanRewardsTxs","tokenTotalSupply","totalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","tokenName","totalDeposited","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalClaimed","event","claimedAmount","returnValues","totalRewardsFormatted","userDeposited","stakeStartTime","stakedTime","depositTimestamp","ts","depositValue","latestDistribution","latestDistributionTime","stakePeriod","currentProfit","apr","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","borderBottom","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","contractApprovedCallback","NexusMutual","quote","1","2","periodOptions","30","60","90","365","coverId","claimId","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionParams","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","coveredTokenAmount","getClaimTransactionParams","incident","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","getNexusMutualCoverages","coverage","validClaimableCoverFromParam","urlParams","param3","cover","param2","paramIsValidToken","setSelectedAction","changeSelectedToken","requiredNetwork","baseEndpoint","makeRequest","response","selectedUnderlyingChanged","loadTokenData","isETH","underlying","getPoolCapacity","getETHBalance","coverData","period","coverAmount","currency","contractAddress","asset","quoteURL","encodeParameters","price","priceInNXM","expiresAt","generatedAt","COVER_TYPE","feePercentage","basePrice","priceWithFee","mul","divn","amountInWei","toWei","textDecoration","activeColor","reset","utils","toTwosComplement","placement","message","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","coverAsset","claimableAmount","maxCoveredAmount","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","idle","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","Fragment","TotalEarningsCounter","earningsEnd","earningsStart","loadTotalEarnings","contractsInitialized","availableStrategies","counterStyle","oldState","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","earningsPerc","tokenAPY","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","availableTokensChanged","getTokensToMigrate","batchInfo","strategy","deposited","batchDeposits","redeemable","batchRedeems","avgScore","totalBalanceWithScore","_ref4","_ref5","tokenScore","amountLentToken","tokenWeight","getTokenScore","totalBalance","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","govTokens","apyLong","riskScore","yieldFarming","nexusMutualConfig","batchDepositConfig","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","getFrequencySeconds","h4","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","desc","goToSection","route","ActiveCoverages","AssetsList","showTooltip","showDirection","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","claim","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","_ref6","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","oldContract","migrateFunction","migration","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","expirationDate","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","_ref7","DeployB2BVesting","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","inputs","validateForm","checkInputs","vesterImplementation","contracts","getContractPastEvents","proxyCreated","deployedContractsAddresses","implementation","proxy","owner","recipient","vestingPeriod","availableBalance","depositAmounts","total","claimedTokensLog","returnString","fieldPattern","RegExp","inputIndex","inputInfo","getPatternByFieldType","inputValid","match","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","events","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","pattern","inputChange","getEtherscanAddressUrl","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","analytics","google","debugEnabled","addPostfixForTestnet","pageView","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","proposals","7","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","showAPR","protocol","showPrice","aprTooltipMode","distributionMode","distributionFrequency","disabledTokens","COMP","stkAAVE","aToken","addressForPrice","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","addGovTokens","titlePostfix","iconName","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","startTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","availableNetworks","3","4","42","1337","isForked","blocksPerYear","secondsPerYear","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","ens","supportedNetworks","nexus","endpoints","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","snapshot","whitelist","urls","biconomy","enableLogin","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","stake","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","directProps","yieldTokenCoverGracePeriod","NexusMutualDistributor","incidentsInfo","NexusMutualIncidents","b2bVesting","visible","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","showAllTokens","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","badge","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","t0","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fee","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","cachedDataKey","APR","idleDistribution","tokenAllocation","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","BN","toEth","wei","fromWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","ensConfig","addressCheck","current","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","orderedTokensBalance","_args4","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","_args5","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","received","slippage","getCurveAvgBuyPrice","prevAvgBuyPrice","_args7","idleTokensBalance","getFirstDepositTx","deposits","_args8","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args9","acc","userAvgPrice","getAmountLent","amountLents","_args11","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","_callee13","_args13","_context13","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee14","_ref19","allAvailableTokens","_args14","_context14","processStoredTxs","_ref20","_callee15","_args15","_context15","_ref21","_callee16","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args16","_context16","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref22","_callee21","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args21","_context21","baseTokenAddress","_ref23","_callee20","minedTxs","_context20","_ref24","_callee19","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context19","getCurveTokenPrice","t1","_ref25","_callee17","_context17","getTransactionReceipt","_x12","_x13","baseTokensConfig","t2","_ref26","_callee18","_context18","_x14","_x15","_x10","_x11","_x9","_ref27","_callee27","txsToProcess","_args27","_context27","_ref28","_callee26","_context26","_ref29","_callee25","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context25","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref30","_callee22","_context22","_x20","_x21","_ref31","_callee23","_context23","_x22","_x23","raw","_ref32","_callee24","_context24","_x24","_x25","decodeLog","_token","_x18","_x19","_x17","_x16","alias","getCustomAddress","setCustomAddress","customAddress","_ref33","_callee28","error_callback","_args28","_context28","catch","_x26","makeEtherscanApiRequest","_ref34","_callee29","apiKeyIndex","_args29","_context29","_x27","_ref35","_callee30","return_data","_args30","_context30","_x28","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","sendGoogleAnalyticsPageview","_callee31","googlePageviewInfo","isOrigin","_args31","_context31","ga","_ref37","_callee33","googleEventsInfo","originOk","currentNetwork","_args33","_context33","_ref38","_callee32","_context32","hitCallback","hitCallbackFail","_x30","_x31","_x29","createContract","_ref39","_callee34","_context34","Contract","_x32","_x33","_x34","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","baseurl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee37","activeOnly","validProposals","_args37","_context37","getCachedData","addr","msg","_ref41","_callee36","checkedStrategies","_context36","metadata","_ref42","_callee35","_context35","symbol","_x36","_x35","_ref43","_callee38","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args38","_context38","_x37","getTokenExchangeRate","_ref44","_callee39","exchangeRateParams","exchangeRate","_context39","_x38","_x39","_ref45","_callee40","_context40","_x40","aprs","allocations","aprWeighted","allocation","quantity","hour","day","week","_callee41","idleTokenConfig","etherscanEndpoint","etherscanTxlist","_context41","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","checkContractPaused","_callee42","contractPaused","_args42","_context42","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref48","_callee44","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context44","lastAllocationsPromise","_ref49","_callee43","lastAllocations","_context43","_x42","_x43","alloc","_x41","checkMigration","_ref50","_callee45","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context45","_x44","_x45","_ref51","_callee46","eventName","_args46","_context46","_x46","_x47","estimateMethodGasUsage","_ref52","_callee47","_contract$methods","functionCall","gasLimit","_ref53","_ref54","_args47","_context47","getGasPrice","estimateGas","_x48","_x49","_ref55","_callee48","callback_receipt","_contract$methods2","_context48","once","confirmationNumber","receipt","_x50","_x51","_x52","_x53","_x54","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref56","_callee49","biconomyInfo","res","_context49","x-api-key","_x55","sendTxWithPermit","_ref57","_callee50","_contract$methods3","messageToSign","_this$getSignaturePar","_context50","encodeABI","_address","personal","sign","_x56","_x57","_x58","_x59","_x60","_x61","buildBiconomyErc20ForwarderTx","_ref58","_callee51","tokenAddress","callData","_context51","erc20ForwarderClient","buildTx","txGas","_x62","_x63","_x64","_x65","_x66","_ref59","_callee53","_context53","_ref60","_callee52","_context52","_x68","_x69","_x67","sendBiconomyTxWithErc20Forwarder","_ref61","_callee54","req","metaInfo","txResponse","fetchReceiptIntervalId","_context54","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x70","_x71","_x72","_x73","sendBiconomyTxWithPersonalSign","_ref62","_callee55","_this$getSignaturePar2","_context55","getNonce","call","_x74","_x75","_x76","_x77","signPermitEIP2612","_ref63","_callee56","erc20Name","spender","deadline","domain","domainData","_context56","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x78","_x79","_x80","_x81","_x82","_x83","_x84","_x85","_ref64","_callee57","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args57","_context57","net","getId","allowed","_x86","_x87","_x88","_ref65","_callee58","permitParams","methodAbi","useNonce","_args58","_context58","_jsonInterface","f","unshift","_x89","_x90","_x91","_x92","_x93","_x94","_x95","sendSignedTx","_ref66","_callee59","MetaTransaction","dataToSign","_context59","_x96","_x97","_x98","_x99","_x100","_ref67","_callee60","contractAddr","walletAddr","_ref68","_ref69","allowance","_context60","getAllowance","_x101","_x102","_x103","_ref70","_callee61","_context61","_x104","_x105","_x106","contractMethodSendWrapperWithValue","txData","disableERC20","loadAssetField","_ref71","_callee62","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref72","_ref73","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref74","_ref75","amountLentCurve1","redeemableBalanceCurve","_ref76","_ref77","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref78","_ref79","amountLent1","redeemableBalance1","_idleGovToken","govTokenConfig","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref80","_ref81","tokenPriceFirstDeposit","_ref82","_ref83","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref84","_ref85","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref86","_ref87","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref88","_ref89","amountLentCurve2","redeemableBalanceCurve1","_ref90","_ref91","redeemableBalance2","_args62","_context62","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x107","_x108","_x109","_x110","getIdleTokenSupply","_ref92","_callee63","idleTokenSupply","_args63","_context63","_x111","getIdleTokenPriceWithFee","_ref93","_callee64","_ref94","_ref95","priceWFee","_args64","_context64","eq","_x112","_x113","_ref96","_callee65","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args65","_context65","_x114","clearCachedData","useLocalStorage","_ref97","_callee66","_ref98","_ref99","idleTokensTotalSupply","userShare","_context66","_x115","_x116","_callee68","coverProtocolConfig","_args68","_context68","_ref101","_callee67","coverageTokens","protocolImage","_context67","_x117","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","protocolImageDark","coverDetails","validUntil","_ref102","_callee70","_ref103","_ref104","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context70","buyer","_ref105","_callee69","claimSubmittedEvent","_ref106","_ref107","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimTxReceipt","claimedAmountLog","claimablePrice","_ref108","_ref109","_context69","productId","incidentDate","curr","priceBefore","underlyingConfig","findIndex","_x119","_x118","_ref110","_callee71","_context71","_x120","getBatchedDeposits","_callee73","filter_by_status","_args73","_context73","_ref112","_callee72","_ref113","_ref114","_context72","_x121","_ref115","_callee74","fixDecimals","_args74","_context74","_x122","_ref116","_callee75","_ref117","_ref118","_args75","_context75","_x123","_x124","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","_ref119","_callee76","_args76","_context76","_x125","_ref120","_callee77","_args77","_context77","_x126","_ref121","_callee78","_args78","_context78","_x127","_x128","getProtocolBalance","_ref122","_callee79","_context79","_x129","_x130","getAprs","_ref123","_callee80","_context80","addresses","_x131","genericIdleCall","_ref124","_callee81","callParams","_args81","_context81","_x132","_ref125","_callee82","_contract$methods4","_args82","_context82","_x133","_x134","getTxDecodedLogs","_ref126","_callee84","logAddr","decodeLogs","internalTransfers","_context84","_ref127","_callee83","_context83","_x139","_x140","_x135","_x136","_x137","_x138","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee85","_context85","_ref129","_callee86","_args86","_context86","getPastEvents","_x141","_x142","_ref130","_callee87","_args87","_context87","_x143","_x144","_ref131","_callee88","_contract$methods5","_args88","_context88","_x145","_x146","_ref132","_callee89","_args89","_context89","_x147","_x148","apr2apy","getUnlentBalance","_ref133","_callee90","unlentBalance","_context90","_x149","_ref134","_callee91","_args91","_context91","_x150","_ref135","_callee93","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_ref139","_ref140","_args93","_context93","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref136","_callee92","_ref137","_ref138","protocolBalance","protocolAllocation","_context92","_x152","_x153","protocolAllocationPerc","getGovTokensBalances","getTokenConversionRate","_x151","_ref141","_callee94","pairAddresses","_ref142","_ref143","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref144","_ref145","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","_context94","_x154","_x155","_ref146","_callee95","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context95","_x156","_x157","_ref147","_callee96","unires","_context96","_x158","_x159","getCurveDepositedTokens","_ref148","_callee97","idleTokensBalances","remainingCurveTokens","_args97","_context97","_x160","getCurveUnevenTokenAmounts","_ref149","_callee98","amounts","max_burn_amount","unevenAmounts","_context98","getCurveDepositContract","_x161","_x162","_callee99","curveRatesInfo","_context99","strategyTokens","getCurveAPYContract","_callee100","blocksForPrevTokenPrice","_ref152","_ref153","prevTokenPrice","blocksMultiplier","curveAPR","_context100","getCurveTokenSupply","_callee101","_context101","getCurvePoolContract","_callee102","_args102","_context102","_callee103","_args103","_context103","_ref157","_callee104","_ref158","_ref159","_context104","_x163","_callee105","depositContractInfo","_context105","getCurveZapContract","_callee106","zapContractInfo","_context106","_callee107","poolContractInfo","_context107","getCurveSwapContract","_callee108","_context108","getCurveIdleTokensAmounts","_callee110","max_slippage","curveTokenSupply","curveTokenShare","_args110","_context110","_ref165","_callee109","curveIdleTokens","_context109","_x164","getCurveTokensAmounts","_callee112","useCoinIndex","_args112","_context112","_ref167","_callee111","_ref168","_ref169","totalTokenSupply","_context111","_x165","getCurveAmounts","_ref170","_callee114","_args114","_context114","_ref171","_callee113","_context113","_x168","_x166","_x167","getCurveTokenAmount","_ref172","_callee115","_args115","_context115","_x169","getCurveSlippage","_ref173","_callee116","uneven_amounts","_ref174","_ref175","virtualPrice","Sv","_args116","_context116","_x170","_x171","_ref176","_callee117","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref177","_ref178","aTokenTotalSupply","aaveAllocationPerc","aaveSpeed","aavePoolShare","_args117","_context117","_x172","_callee119","_args119","_context119","_ref180","_callee118","_ref181","_ref182","_context118","_x173","getStkAaveApr","_ref183","_callee120","aaveConversionRate","stkAaveAPR","stkAaveValue","_args120","_context120","_x174","_x175","getCompAPR","_ref184","_callee121","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args121","_context121","_x176","_x177","getCompSpeed","_ref185","_callee122","cTokenAddress","compSpeed","_context122","_x178","_ref186","_callee123","cTokenInfo","compoundAllocationPerc","_ref187","_ref188","cTokenTotalSupply","compoundPoolShare","_args123","_context123","_x179","_callee125","_args125","_context125","_ref190","_callee124","_ref191","_ref192","_context124","_x180","_callee127","_args127","_context127","_ref194","_callee126","_ref195","_ref196","compApr","_context126","_x181","getTokensCsv","_callee130","csv","_context130","prototype","sum","pv","cv","avg","_ref198","_callee129","_context129","_ref199","_callee128","header","aprAvg","scoreAvg","lastRow","_context128","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x183","_x182","_callee132","_args132","_context132","_ref201","_callee131","compTokenBalance","_context131","_x184","getTokenGovTokens","speed","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref202","_callee134","govTokensUserDistribution","_args134","_context134","_ref203","_callee133","_context133","_x186","_x185","getGovTokensDistributionSpeed","_ref204","_callee136","govTokensDistribution","tokenGovTokens","_args136","_context136","_ref205","_callee135","govSpeed","_context135","_x188","_x187","getGovTokensAprs","_ref206","_callee138","govTokensAprs","_args138","_context138","_ref207","_callee137","_ref208","_ref209","_ref210","_ref211","cTokenConfig","_context137","_x191","_x189","_x190","_callee140","_args140","_context140","_ref213","_callee139","tokenConversionRate","fromTokenConfig","_context139","_x192","getGovTokenConfigByAddress","_callee141","checkShowBalance","govTokensEarnings","_args141","_context141","govTokenAmount","getGovTokensIndexes","_ref215","_callee143","govTokensAmounts","_context143","getGovTokensUserAmounts","_ref216","_callee142","govTokenIndex","govTokenAddress","_context142","getGovTokenAddessByIndex","_x195","_x196","_x193","_x194","_ref217","_callee144","_context144","_x197","_x198","_ref218","_callee145","_context145","_x199","_x200","_callee148","govTokenConfigForced","_args148","_context148","_ref220","_callee147","_context147","_ref221","_callee146","_context146","_x202","_x203","_x201","getTokenFees","_callee149","_args149","_context149","_callee150","_ref224","_ref225","gain","fees","_args150","_context150","_ref226","_callee151","_args151","_context151","_x204","getTotalTVL","_callee152","tokensTVL","_context152","getTokensTVL","totalTVL","tokenTVL","_callee156","_context156","_ref229","_callee155","_context155","_ref230","_callee154","oldTokenTVL","idleTokenName","_ref231","_ref232","oldTokenConfig","_ref236","_ref237","oldTokenPrice","oldTotalSupply","_context154","_ref233","_callee153","_ref234","_ref235","govTokenConversionRate","govTokenBalanceConverted","_context153","_x207","oldProtocols","oldProtocol","protocolPos","_x206","_x205","getSubstackLatestFeed","_callee157","endpointInfo","idleSubstackFeed","latestFeed","_context157","items","getAggregatedStats","_callee158","totalAUM","_args158","_context158","getAggregatedStats_chain","_callee162","avgAPR","_args162","_context162","_ref241","_callee161","_context161","_ref242","_callee160","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context160","_ref243","_callee159","_ref244","_ref245","_context159","_x210","_x209","_x208","getTokenApy","_ref246","_callee163","_context163","_x211","_callee166","_args166","_context166","_ref248","_callee165","_context165","_ref249","_callee164","_ref250","_context164","_x213","_x212","getProtocolsTokensBalances","_callee168","tokenBalances","minTokenBalance","protocolsTokens","_args168","_context168","_ref252","_callee167","tokenContract","_context167","_x214","_ref253","_callee169","_args169","_context169","_x215","_x216","_x217","getAvgAPYStats","_ref254","_callee170","apiResults","_args170","_context170","_x218","_x219","_ref255","_callee171","_conversionRate","_args171","_context171","_x220","_x221","_ref256","_callee172","_ref257","_ref258","_context172","protocolScore","getTokenScoreApi","_x222","_x223","_ref259","_callee173","_context173","_x224","_x225","_ref260","_callee176","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args176","_context176","_ref261","_callee175","addrIndex","protocolApr","protocolApy","govTokenAPR","_context175","_ref262","_callee174","_context174","_x229","_x227","_x228","_x226","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","React","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","contrastColor","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","tokenChanged","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this9","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","FieldComponent","colInfo","colIndex","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","fieldName","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","fieldChanged","contractInitialized","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","tooltipProps","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_ref11","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","buttonLabel","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","formattedValue","_isBigNumber"],"mappings":"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","file":"static/js/main.3dd01c93.chunk.js","sourcesContent":["import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          }}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}%).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      tokenTotalSupply,\n      totalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.getTokenTotalSupply(this.props.contractInfo.name),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    const distributedRewards = etherscanRewardsTxs.map( tx => (\n      {\n        hash:tx.hash,\n        tokenName:tx.tokenSymbol,\n        amount:this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals),\n        date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n      }\n    ));\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n      const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n      totalClaimed = totalClaimed.plus(claimedAmount);\n      return totalClaimed;\n    },this.functionsUtil.BNify(0));\n    const totalRewards = claimableRewards ? totalClaimed.plus(claimableRewards) : this.functionsUtil.BNify(0);\n    const totalRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[3] : this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    const latestDistribution = Object.assign([],etherscanRewardsTxs).pop();\n    const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const stakePeriod = latestDistributionTime.minus(stakeStartTime);\n\n    const currentProfit = stakedBalance.gt(0) ? claimable.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const apr = stakePeriod.gt(0) ? currentProfit.times(this.functionsUtil.getGlobalConfig(['network','secondsPerYear'])).div(stakePeriod).times(100) : this.functionsUtil.BNify(0);\n    // console.log('APR',apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),claimable.toFixed(),stakedBalance.toFixed(),latestCheckpoint);\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          (this.state.claimable && this.state.claimable.gt(0)) ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'claim'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                contractName={this.props.tokenConfig.feeDistributor.name}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have rewards to Claim yet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'coverage',\n      label:'Coverage',\n      desc:'Buy Nexus Mutual coverage without KYC for your deposits',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  insurance:{\n    nexusMutual:{\n      label:'Nexus Mutual',\n      image:'images/protocols/nexus-mutual.png',\n      imageDark:'images/protocols/nexus-mutual-white.png'\n    },\n    coverProtocol:{\n      label:'Cover Protocol',\n      image:'images/protocols/cover-logo.svg',\n      imageDark:'images/protocols/cover-logo.svg',\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]);\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n\n      if (!protocolInfo.enabled){\n        return;\n      }\n\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    [\n      tokenAllocation.totalAllocationConverted,\n      tokenAllocation.totalAllocationWithUnlentConverted\n    ] = await Promise.all([\n      this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig),\n      this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig)\n    ]);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    window.clearCachedData = this.clearCachedData;\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}