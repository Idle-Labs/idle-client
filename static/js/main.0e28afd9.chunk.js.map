{"version":3,"sources":["SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","AllocationChart/AllocationChart.js","Faquestion/Faquestion.js","TranchesList/TranchesList.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","ExecuteTransaction/ExecuteTransaction.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","utilities/components/Header.module.scss","TooltipText/TooltipText.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","CustomList/CustomList.js","configs/availableTranches.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheHarvests/TrancheHarvests.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","ConnectBox/ConnectBox.js","Title/Title.js","TrancheField/TrancheField.js","Footer/Footer.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","RoundButton/RoundButton.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","ExtLink/ExtLink.js","CustomField/CustomField.js","ImageButton/ImageButton.js","AssetField/AssetField.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","RoundIconButton","assign","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","size","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","textAlign","mb","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","py","px","backgroundColor","isOpened","boxShadow","cursor","h4","question","dangerouslySetInnerHTML","__html","answer","TranchesList","enabledProtocols","availableTranches","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","cols","colsProps","protocol","protocolConfig","tranche","trancheType","token","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","rowId","cardId","fieldComponent","TrancheField","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","children","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","fields","mr","themeMode","textTransform","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","cardProps","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","isInteractive","notInteractive","CustomIndicatorSeparator","CustomMenu","mt","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","CardIconButton","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isActive","isDisabled","align","image","imageProps","useIconOnly","iconColor","iconProps","isSidebar","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","bg","twitterIcon","radioBtn","button","IconBox","isVisible","gradientButton","empty","select","selectDark","input","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getCurrentWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","stakingRewards","tranchesBalance","_ref4","_ref5","trancheConfig","trancheTokenBalance","trancheUserInfo","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getTokenConversionRateUniswap","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args9","tokensToMigrate","totalBalanceConverted","_ref15","_ref16$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_ref19","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","currentWeb3","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","_args11","prevAvgBuyPrice","getAvgBuyPrice","idleTokensBalance","getFirstDepositTx","_callee13","deposits","_args13","_context13","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee14","firstDepositTxs","_args14","_context14","reduce","acc","getTrancheStakingRewardsDistributions","_ref25","_callee16","stakingDistributions","_context16","_ref26","_callee15","eventFilters","transfers","_context15","CDO","getContractEvents","_x10","_x9","getTrancheHarvests","_ref27","_callee18","_ref28","_ref29","stakingRewardsDistributions","autoFarming","harvestsList","_context18","_ref30","_callee17","_context17","_x13","_x11","_x12","getTrancheRewardTokensInfo","_ref31","_callee20","tokensDistribution","_context20","_ref32","_callee19","firstHarvest","prevBlockInfo","lastBlockInfo","latestHarvest","tokenApr","tokenApy","distributionEnded","lastAmount","totalAmount","tokensPerDay","distributionSpeedUnit","tokensPerYear","tokensPerBlock","tranchePoolSize","tokensPerSecond","lastBlockPoolSize","distributionSpeed","convertedTokensPerYear","govTokenConfig","rewardsRateMethod","periodFinishMethod","periodFinish","_ref33","_ref34","_firstHarvest","_latestHarvest","firstBlock","_ref35","_ref36","poolSize","elapsedBlocks","elapsedSeconds","_context19","_address","rewardsRate","now","genericContractCallCached","apr2apy","apr","apy","getBlockInfo","returnValues","total","_x16","_x14","_x15","_ref37","_callee22","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref38","_ref39","underlying_transfers","trancheToken_transfers","totalAmountDeposited","blocksInfo","_context22","sort","_ref40","_callee21","trancheTokenTransferEvent","tokenTransferEvent","_ref41","_ref42","blockInfo","tokenConversionRate","_context21","_x20","trancheTokenAmount","hashKey","trancheTokens","_x17","_x18","_x19","getTrancheUserTransactions","_ref43","_callee23","_context23","_x21","_x22","_x23","getTrancheFirstDepositTx","_ref44","_callee24","_context24","_x24","_x25","_x26","getAmountDepositedTranche","_ref45","_callee25","_context25","_x27","_x28","_x29","_ref46","_callee26","_ref47","_ref48","userAvgPrice","_context26","_x30","_x31","getAmountLent","_callee27","amountLents","_args27","_context27","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee33","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref51","_ref52","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args33","_context33","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref53","_callee28","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context28","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x32","_ref54","_callee29","_context29","_x33","match","_ref55","_callee30","_context30","_x34","_ref56","_callee31","_context31","_x35","items","to_address","_ref57","_callee32","polygonTx","_context32","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x36","getPolygonBaseTxs","_callee34","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args34","_context34","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee35","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args35","_context35","filterEthereumTxs","_callee36","_args36","_context36","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee37","resultData","_resultData","allAvailableTokens","_args37","_context37","processStoredTxs","t1","_callee38","contractInstance","_context38","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref63","_callee39","_ref64","_ref65","_context39","getTransactionReceipt","_x37","_ref66","_callee40","_args40","_context40","_x38","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref67","_callee41","processTransactions","idleTokensAddresses","_args41","_context41","mappedTx","_x39","_x40","filterEtherscanTxs","_ref68","_callee42","processTxs","_args42","_context42","_x41","_ref69","_callee43","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args43","_context43","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x42","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref70","_callee48","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args48","_context48","baseTokenConfig","baseTokenAddress","_ref71","_callee47","minedTxs","_context47","_ref72","_callee46","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context46","getCurveTokenPrice","_ref73","_callee44","_context44","_x47","_x48","baseTokensConfig","t2","_ref74","_callee45","_context45","_x49","_x50","_x45","_x46","_x44","_x43","_ref75","_callee54","txsToProcess","_args54","_context54","_ref76","_callee53","_context53","_ref77","_callee52","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context52","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref78","_callee49","_context49","_x55","_x56","_ref79","_callee50","_context50","_x57","_x58","oldContract","events","raw","_ref80","_callee51","_context51","_x59","_x60","abi","decodeLog","_token","_x53","_x54","_x52","_x51","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","getSubgraphTrancheInfo","_ref81","_callee55","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args55","_context55","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x61","getBestTranche","_callee56","trancheTypes","trancheStrategyConfig","_args56","_context56","timetamp","splice","availableTrancheInfo","tInfo","_ref83","_callee57","error_callback","config","_args57","_context57","post","catch","_x62","_ref84","_callee58","_args58","_context58","_x63","_ref85","_callee59","apiKeyIndex","apiKey","_args59","_context59","_x64","_ref86","_callee60","return_data","_args60","_context60","_x65","makeCachedPostRequest","_ref87","_callee61","_args61","_context61","_x66","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee62","page","googlePageviewInfo","isOrigin","_args62","_context62","ga","_ref89","_callee64","googleEventsInfo","debugEnabled","originOk","_args64","_context64","analytics","google","addPostfixForTestnet","availableNetworks","_ref90","_callee63","_context63","hitCallback","hitCallbackFail","_x68","_x69","_x67","createContract","_ref91","_callee65","_context65","_x70","_x71","_x72","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee68","activeOnly","whitelist","proposals","validProposals","_args68","_context68","addr","_ref93","_callee67","checkedStrategies","_context67","end","author","snapshot","strategies","_ref94","_callee66","tokenContract","_context66","_x74","_x73","getAprsFromApi","_callee69","endpointInfo","aprs","_args69","_context69","_ref96","_callee70","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args70","_context70","_x75","getTokenExchangeRate","_ref97","_callee71","exchangeRateParams","exchangeRate","_context71","_x76","_x77","getTokenDecimals","_ref98","_callee72","_context72","_x78","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee73","idleTokenConfig","feeDistributorConfig","_context73","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee74","contractPaused","_args74","_context74","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref101","_callee76","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context76","lastAllocationsPromise","_ref102","_callee75","lastAllocations","_context75","_x80","_x81","alloc","_x79","_ref103","_callee77","oldContractBalance","oldContractTokenDecimals","oldContractName","_context77","_x82","_x83","_ref104","_callee78","eventName","fromBlock","toBlock","blocksPerCall","lastBlockNumber","calls","_toBlock","all_past_events","_args78","_context78","getBlockNumber","getContractPastEvents","_x84","_x85","estimateMethodGasUsage","_ref105","_callee79","methodParams","_contract$methods","functionCall","gasLimit","_ref106","_ref107","_args79","_context79","getGasPrice","estimateGas","_x86","_x87","_ref108","_callee80","userAddress","signedParameters","callback_receipt","_contract$methods2","_context80","on","once","confirmationNumber","receipt","_x88","_x89","_x90","_x91","_x92","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref109","_callee81","biconomyInfo","res","_context81","limits","apiId","headers","x-api-key","_x93","sendTxWithPermit","_ref110","_callee82","_contract$methods3","messageToSign","_this$getSignaturePar","_context82","encodeABI","personal","sign","_x94","_x95","_x96","_x97","_x98","_x99","buildBiconomyErc20ForwarderTx","_ref111","_callee83","permitType","callData","buildParams","_context83","txGas","erc20ForwarderClient","buildTx","_x100","_x101","_x102","_x103","_x104","_ref112","_callee85","_context85","_ref113","_callee84","_context84","_x106","_x107","_x105","sendBiconomyTxWithErc20Forwarder","_ref114","_callee86","req","metaInfo","txResponse","fetchReceiptIntervalId","_context86","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x108","_x109","_x110","_x111","sendBiconomyTxWithPersonalSign","_ref115","_callee87","_this$getSignaturePar2","_context87","getNonce","_x112","_x113","_x114","_x115","signPermitEIP2612","_ref116","_callee88","erc20Name","owner","spender","deadline","domain","permit","domainData","_context88","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x116","_x117","_x118","_x119","_x120","_x121","_x122","_x123","signPermit","_ref117","_callee89","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args89","_context89","net","getId","round","nonceMethod","pow","allowed","response","_x124","_x125","_x126","_ref118","_callee90","permitParams","methodAbi","useNonce","_args90","_context90","_jsonInterface","f","unshift","_x127","_x128","_x129","_x130","_x131","_x132","_x133","sendSignedTx","_ref119","_callee91","MetaTransaction","dataToSign","_context91","_x134","_x135","_x136","_x137","_x138","checkTokenApproved","_ref120","_callee92","contractAddr","walletAddr","_ref121","_ref122","allowance","_context92","getAllowance","gte","_x139","_x140","_x141","_ref123","_callee93","_context93","_x142","_x143","_x144","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getBestToken","_callee95","highestValue","_args95","_context95","lendRates","aprInfo","tokenAPR","_ref125","_callee94","_context94","_x145","_ref126","_callee96","_args96","_context96","_x146","_x147","_ref127","_callee98","_args98","_context98","_ref128","_callee97","tokenGlobalConfig","stakingRewardsContract","_context97","_x150","_x148","_x149","_ref129","_callee99","field","addGovTokens","_args99","_context99","loadTrancheField","_x151","_x152","_x153","_x154","_x155","_x156","_x157","_x158","_ref130","_callee100","formatValue","addTokenName","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","strategyConfig","show_idle_apy","idleStrategyAddress","idleGovTokenConfig","_ref131","_ref132","totalSupply","virtualPrice","_ref133","_ref134","lastPrice1","staked1","_ref135","_ref136","deposited1","lastPrice","_ref137","_ref138","redeemable1","staked2","_ref139","_ref140","earningsStart","trancheApy2","deposited3","earningsEnd","_ref141","_ref142","trancheFee","earningsCounter","feesEnd","feesStart","_ref143","_ref144","deposited4","redeemable3","_ref145","_ref146","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","curveBaseApy","_ref147","_ref148","_ref149","_ref150","earningsPerc","secondsFromFirstTx","_ref151","_ref152","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args100","_context100","Strategy","initContract","AA","BB","getTokenTotalSupply","curveApyPath","getCurveAPYs","rewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","getTokenConfigByAddress","stakingRewardsTokenConfig","govToken","_x159","_x160","_x161","_x162","_x163","_x164","_x165","loadAssetField","_ref153","_callee101","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref154","_ref155","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref156","_ref157","amountLentCurve1","redeemableBalanceCurve","_ref158","_ref159","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref160","_ref161","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref162","_ref163","tokenPriceFirstDeposit","_ref164","_ref165","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref166","_ref167","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref168","_ref169","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref170","_ref171","amountLentCurve2","redeemableBalanceCurve1","_ref172","_ref173","redeemableBalance2","_args101","_context101","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x166","_x167","_x168","_x169","getIdleTokenSupply","_ref174","_callee102","idleTokenSupply","_args102","_context102","_x170","getIdleTokenPriceWithFee","_ref175","_callee103","_ref176","_ref177","fee","priceWFee","_args103","_context103","eq","_x171","_x172","_ref178","_callee104","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args104","_context104","_x173","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref179","_callee105","_ref180","_ref181","idleTokensTotalSupply","userShare","_context105","_x174","_x175","open","_callee107","coverProtocolConfig","nexusMutualConfig","_args107","_context107","_ref183","_callee106","coverage","coverageTokens","protocolImage","_context106","tokens","expirationTimestamp","utc","_x176","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref184","_callee109","incidentsInfo","_ref185","_ref186","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context109","directProps","startBlock","contractInfo","buyer","_ref187","_callee108","cover","coverId","claimSubmittedEvent","_ref188","_ref189","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref190","_ref191","_context108","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x178","_x177","getBatchedDepositExecutions","_ref192","_callee110","_context110","_x179","getBatchedDeposits","_callee112","filter_by_status","batchDepositConfig","batchedDeposits","_args112","_context112","_ref194","_callee111","currBatchIndex","batchIndex","_ref195","_ref196","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context111","_x180","getETHBalance","_ref197","_callee113","fixDecimals","_args113","_context113","_x181","_ref198","_callee114","_ref199","_ref200","_args114","_context114","ERC20","_x182","_x183","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref201","_callee115","_args115","_context115","_x184","_ref202","_callee116","_args116","_context116","_x185","_ref203","_callee117","_args117","_context117","_x186","_x187","getProtocolBalance","_ref204","_callee118","_context118","_x188","_x189","getAprs","_ref205","_callee119","_context119","addresses","_x190","genericIdleCall","_ref206","_callee120","callParams","_args120","_context120","_x191","_ref207","_callee121","_contract$methods4","_args121","_context121","_x192","_x193","_ref208","_callee123","_args123","_context123","_ref209","_callee122","_context122","_x195","_x196","_x194","getTxDecodedLogs","_ref210","_callee125","logAddr","decodeLogs","internalTransfers","_context125","_ref211","_callee124","_context124","_x201","_x202","_x197","_x198","_x199","_x200","blocksToSeconds","blocks","blocksPerSeconds","_callee126","_context126","_callee127","blockInfoToSave","_args127","_context127","getBlock","_ref214","_callee128","_args128","_context128","getPastEvents","_x203","_x204","_ref215","_callee129","_args129","_context129","_x205","_x206","cachedContractCall","_ref216","_callee130","_args130","_context130","_x207","_x208","_ref217","_callee131","_contract$methods5","_args131","_context131","_x209","_x210","_ref218","_callee132","async","_args132","_context132","_x211","_x212","getUnlentBalance","_ref219","_callee133","unlentBalance","_context133","_x213","_ref220","_callee134","_args134","_context134","_x214","getLastAllocations","_ref221","_callee136","tokenAllocations","_context136","_ref222","_callee135","_context135","_x216","_x217","_x215","_ref223","_callee137","protocolsAprs","_ref224","_ref225","govTokensBalances","_args137","_context137","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x218","getSushiswapPoolTokenPrice","_ref226","_callee138","_ref227","_ref228","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref229","_ref230","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context138","getSushiswapConversionRate","_x219","_ref231","_callee139","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context139","_x220","_x221","_ref232","_callee140","useWETH","unires","_args140","_context140","addressForPrice","_x222","_x223","getCurveDepositedTokens","_ref233","_callee141","idleTokensBalances","remainingCurveTokens","_args141","_context141","_x224","getCurveUnevenTokenAmounts","_ref234","_callee142","amounts","max_burn_amount","unevenAmounts","_context142","getCurveDepositContract","_x225","_x226","_callee143","curveRatesInfo","_args143","_context143","_callee144","_context144","strategyTokens","getCurveAPYContract","_callee145","blocksForPrevTokenPrice","_ref238","_ref239","prevTokenPrice","blocksMultiplier","curveAPR","_context145","getCurveTokenSupply","_callee146","_context146","getCurvePoolContract","_callee147","_args147","_context147","_callee148","_args148","_context148","_ref243","_callee149","_ref244","_ref245","_context149","_x227","_callee150","depositContractInfo","_context150","getCurveZapContract","_callee151","zapContractInfo","_context151","_callee152","poolContractInfo","_context152","getCurveSwapContract","_callee153","migrationContractInfo","_context153","getCurveIdleTokensAmounts","_callee155","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args155","_context155","_ref251","_callee154","coinIndex","curveIdleTokens","_context154","migrationParams","_x228","getCurveTokensAmounts","_callee157","useCoinIndex","_args157","_context157","_ref253","_callee156","_ref254","_ref255","idleTokenPrice","totalTokenSupply","_context156","_x229","getCurveAmounts","_ref256","_callee159","_args159","_context159","_ref257","_callee158","_context158","_x232","_x230","_x231","getCurveTokenAmount","_ref258","_callee160","_args160","_context160","_x233","getCurveSlippage","_ref259","_callee161","uneven_amounts","depositContract","_ref260","_ref261","Sv","_args161","_context161","_x234","_x235","_ref262","_callee162","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref263","_ref264","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args162","_context162","IAaveIncentivesController","emissionPerSecond","_x236","_callee164","_args164","_context164","_ref266","_callee163","_ref267","_ref268","_context163","_x237","getWMaticApr","_ref269","_callee165","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args165","_context165","_x238","_x239","getStkAaveApr","_ref270","_callee166","aaveConversionRate","stkAaveAPR","stkAaveValue","_args166","_context166","_x240","_x241","getCompAPR","_ref271","_callee167","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args167","_context167","_x242","_x243","getCompSpeed","_ref272","_callee168","cTokenAddress","compSpeed","_context168","_x244","_ref273","_callee169","cTokenInfo","compoundAllocationPerc","_ref274","_ref275","cTokenTotalSupply","compoundPoolShare","_args169","_context169","_x245","_callee171","_args171","_context171","_ref277","_callee170","_ref278","_ref279","_context170","_x246","_callee173","_args173","_context173","_ref281","_callee172","_ref282","_ref283","compApr","_context172","_x247","getTokensCsv","_callee176","csv","_context176","prototype","sum","pv","cv","avg","_ref285","_callee175","_context175","_ref286","_callee174","rates","header","aprAvg","scoreAvg","lastRow","_context174","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x249","_x248","_callee178","convertToken","_args178","_context178","_ref288","_callee177","compTokenBalance","_context177","_x250","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref289","_callee180","govTokensUserDistribution","_args180","_context180","_ref290","_callee179","_context179","_x252","_x251","getGovTokensDistributionSpeed","_ref291","_callee182","govTokensDistribution","_args182","_context182","_ref292","_callee181","govSpeed","_context181","_x254","_x253","getGovTokensAprs","_ref293","_callee184","govTokensAprs","_args184","_context184","_ref294","_callee183","_ref295","_ref296","_ref297","_ref298","cTokenConfig","_context183","aprTooltipMode","_x257","_x255","_x256","_callee186","_args186","_context186","_ref300","_callee185","govTokenBalance","fromTokenConfig","_context185","_x258","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee187","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args187","_context187","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref302","_callee189","govTokensAmounts","_context189","getGovTokensUserAmounts","_ref303","_callee188","govTokenIndex","govTokenAddress","_context188","getGovTokenAddessByIndex","_x261","_x262","_x259","_x260","_ref304","_callee190","_context190","_x263","_x264","_ref305","_callee191","_context191","_x265","_x266","_callee194","govTokenConfigForced","_args194","_context194","_ref307","_callee193","_context193","_ref308","_callee192","_context192","_x268","_x269","_x267","getTokenFees","_callee195","_args195","_context195","_callee196","_ref311","_ref312","feePercentage","gain","fees","_args196","_context196","_ref313","_callee197","_args197","_context197","_x270","getTotalTVL","_callee198","tokensTVL","_context198","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee202","_context202","_ref316","_callee201","_context201","_ref317","_callee200","oldTokenTVL","idleTokenName","_ref318","_ref319","oldTokenConfig","_ref323","_ref324","oldTokenPrice","oldTotalSupply","_context200","showAUM","_ref320","_callee199","_ref321","_ref322","govTokenConversionRate","govTokenBalanceConverted","_context199","_x273","oldProtocols","oldProtocol","protocolPos","_x272","_x271","getSubstackLatestFeed","_callee203","idleSubstackFeed","latestFeed","_context203","getTrancheAggregatedStats","_callee207","totalAUM","_args207","_context207","_ref327","_callee206","_context206","_ref328","_callee205","_context205","_ref329","_callee204","_ref330","_ref331","_context204","_x276","_x275","_x274","getAggregatedStats","_callee209","allNetworks","networkIds","_args209","_context209","_ref333","_callee208","tvls","_context208","getAggregatedStats_chain","_x277","_callee213","avgAPR","_args213","_context213","_ref335","_callee212","_context212","_ref336","_callee211","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context211","_ref337","_callee210","_ref338","_ref339","_context210","_x280","_x279","_x278","getTokenApy","_ref340","_callee214","_context214","_x281","getTokensToMigrate","_callee217","_args217","_context217","_ref342","_callee216","_context216","_ref343","_callee215","_ref344","_context215","_x283","_x282","getProtocolsTokensBalances","_callee219","tokenBalances","minTokenBalance","protocolsTokens","_args219","_context219","_ref346","_callee218","_context218","_x284","getTokenConversionRateField","_ref347","_callee220","_args220","_context220","_x285","_x286","_ref348","_callee221","_args221","_context221","_x287","_x288","_x289","getAvgAPYStats","_ref349","_callee222","apiResults","_args222","_context222","_x290","_x291","_ref350","_callee223","statsTokenConfig","ToTokenConfig","_args223","_context223","addressForPriceFrom","_x292","_ref351","_callee224","count","_conversionRate","_args224","_context224","_x293","_x294","getTokenScore","_ref352","_callee225","_ref353","_ref354","tokenScore","_context225","protocolScore","getTokenScoreApi","_x295","_x296","_ref355","_callee226","scores","_context226","_x297","_x298","_ref356","_callee227","idleGovTokenShowAPR","idleAPR","_args227","_context227","_x299","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableRow","FieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","rowProps","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","CustomList","rowsPerPage","totalPages","processedRows","processRows","totalRows","paginationEnabled","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","prevPage","nextPage","_contracts_ERC20_json__WEBPACK_IMPORTED_MODULE_0__","_contracts_IdleCDO_json__WEBPACK_IMPORTED_MODULE_1__","_contracts_IdleStrategy_json__WEBPACK_IMPORTED_MODULE_2__","_contracts_IdleCDOTrancheRewards_json__WEBPACK_IMPORTED_MODULE_3__","_contracts_TrancheStakingRewards_json__WEBPACK_IMPORTED_MODULE_4__","DAI","IdleCDO","IdleStrategy","stake","unstake","unstakeWithBalance","IdleCDOTrancheRewards","FEI","lido","stETH","buyInstructions","TrancheStakingRewards","convex","FRAX3CRV","MIM3CRV","steCRV","ALUSD3CRV","3EUR","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","RoundButton","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","approveEnabled","buttonDisabled","approveDescription","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","infoBox","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","flexBasis","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","TrancheHarvests","distributions","tokenIcon","Title","SendTxWithBalance","permitEnabled","showPermitBox","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","balanceSelectorInfo","ConnectBox","modalApy","modalAction","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheTokenToRedeem","transactionSucceeded","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setSelectedAction","setStakeAction","Button","src_SendTxWithBalance_SendTxWithBalance","contractApprovedCallback","PortfolioEquityTranches","transactionsList","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","trancheAAInfos","trancheBBInfos","timeStamp_start","conversionRatesTimestamps","blocksTimestamps","conversionRateBlocksCalls","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","src_TrancheHarvests_TrancheHarvests","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","_this8","_this9","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","MUSD3CRV","MUSD","ANGLE","STECRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","mstable","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args7","initContractWithoutSet","_args8","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","requiredNetworkId","contractsToInitialize","newContracts","availableStrategiesNetworks","contractFound","contractIndex","balanceOf","determineAccountLowBalance","openConnectionModal","_args20","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args22","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args23","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","HeadingComponent","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_19__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","CustomTooltip","xFormatted","CustomTooltipRow","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","tokenConfigStats","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.0e28afd9.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          // console.log(protocol,token,tranche,trancheConfig.name,account,this.BNify(trancheTokenBalance).toFixed(5),this.BNify(trancheStakedBalance).toFixed(5));\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0))) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getTokenConversionRateUniswap(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let prevBlockInfo = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getGlobalConfig(['stats', 'tokens', token]);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n        // console.log('getTrancheRewardTokensInfo',tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokensDistribution);\n      } else {\n        const eventFilters = {\n          from: tokenConfig.CDO.address,\n          to: trancheConfig.CDORewards.address\n        }\n        // const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n        const transfers = await this.getContractEvents(token, 'Transfer', tokenConfig.blockNumber, 'latest', { filter: eventFilters });\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n          [\n            prevBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (prevBlockInfo && lastBlockInfo) {\n            let poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account, tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account, tokenConfig.CDO.address];\n\n    let [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000', this.props.account], to: ['0x0000000000000000000000000000000000000000', this.props.account] } })\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    underlying_transfers = underlying_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    trancheToken_transfers = trancheToken_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw') {\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length - 1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, { from: this.props.account, encodeAbi: true });\n              } catch (error) {\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')) {\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug) {\n        console.log('DEBUG - CACHED - baseTxs', baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber) + 1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null)=>{\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n    \n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    let results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n      \n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        token:null,\n        protocol:null,\n        apr:this.BNify(0)\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranches[protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr))){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      let result= axios(config)\n      return result\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 120, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK') {\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint, false, config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, fromBlock=0, toBlock='latest', params = {}) => {\n\n    const blocksPerCall = 100000;\n    const lastBlockNumber = toBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : toBlock;\n    fromBlock = fromBlock || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    return all_past_events.reduce( (events,d) => {\n      events = events.concat(d);\n      return events;\n    },[]);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    // console.log('loadTrancheField',protocol,token,tranche,stakingRewards,stakingEnabled);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name, 'strategy');\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'fee');\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals,trancheConfig.functions.stakedBalance)\n          ]);\n\n          if (staked1 && lastPrice1) {\n            output = this.BNify(staked1).times(lastPrice1);\n            // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'limit');\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCached(strategyConfig.name, 'getRewardTokens'),\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getIncentiveTokens')\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]) {\n      cachedData = this.props.cachedData[key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]) {\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate >= parseInt(Date.now() / 1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName.toUpperCase()]);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      return this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n    }\n\n    return null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return results.data;\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      if (!tvls) {\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (tokenBalance && tokenConversionRate) {\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : null;\n\n    // Replace from token address\n    if (statsTokenConfig.addressForPriceFrom){\n      DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n    }\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    // Don't use WETH in the path\n    const useWETH = !statsTokenConfig.addressForPriceFrom;\n\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf',\n          periodFinish:'periodFinish'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:false,\n          stakingRewards:[\n            {\n              token:'LDO',\n              enabled:true,\n              address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n            }\n          ],\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_lido_stETH_AA',\n          address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  /*\n  mstable:{\n    mUSD:{\n      abi:ERC20,\n      decimals:18,\n      token:'mUSD',\n      protocol:'mstable',\n      autoFarming:['MTA'],\n      blockNumber:14184007,\n      address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_mstable_mUSD',\n        address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_mstable_mUSD'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:false,\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_mstable_mUSD_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'AA_mstable_mUSD',\n        token:'AA_mstable_mUSD',\n        label:'mstable mUSD AA',\n        address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'BB_mstable_mUSD',\n        token:'BB_mstable_mUSD',\n        label:'mstable mUSD BB',\n        address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n      }\n    }\n  },\n  */\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      curveApyPath:['apy','day','frax'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MIM3CRV',\n      protocol:'convex',\n      blockNumber:13848124,\n      curveApyPath:['apy','day','mim'],\n      autoFarming:['CVX','CRV','SPELL'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    },\n    steCRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'steCRV',\n      protocol:'convex',\n      blockNumber:14182975,\n      autoFarming:['CVX','CRV','LDO'],\n      curveApyPath:['apy','day','steth'],\n      address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_steCRV',\n        address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_steCRV'\n      },\n      buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'AA_convex_steCRV',\n        token:'AA_convex_steCRV',\n        label:'convex steCRV AA',\n        address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'BB_convex_steCRV',\n        token:'BB_convex_steCRV',\n        label:'convex steCRV BB',\n        address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n      }\n    },\n    ALUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      protocol:'convex',\n      token:'ALUSD3CRV',\n      blockNumber:14177732,\n      autoFarming:['CVX','CRV'],\n      address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_alusd3crv',\n        address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_alusd3crv'\n      },\n      buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'AA_convex_alusd3crv',\n        token:'AA_convex_alusd3crv',\n        label:'convex alusd3crv AA',\n        address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'BB_convex_alusd3crv',\n        token:'BB_convex_alusd3crv',\n        label:'convex alusd3crv BB',\n        address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n      }\n    },\n    \"3EUR\":{\n      abi:ERC20,\n      decimals:18,\n      token:'3EUR',\n      protocol:'convex',\n      blockNumber:14177892,\n      autoFarming:['CVX','CRV','ANGLE'],\n      address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_3eur',\n        address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_3eur'\n      },\n      buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'AA_convex_3eur',\n        token:'AA_convex_3eur',\n        label:'convex 3eur AA',\n        address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'BB_convex_3eur',\n        token:'BB_convex_3eur',\n        label:'convex 3eur BB',\n        address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n      }\n    }\n    /*\n    MUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MUSD3CRV',\n      protocol:'convex',\n      blockNumber:14177794,\n      autoFarming:['CVX','CRV'],\n      address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_musd3crv',\n        address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_musd3crv'\n      },\n      buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'AA_convex_musd3crv',\n        token:'AA_convex_musd3crv',\n        label:'convex musd3crv AA',\n        address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'BB_convex_musd3crv',\n        token:'BB_convex_musd3crv',\n        label:'convex musd3crv BB',\n        address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n      }\n    }\n    */\n  }\n};\nexport default availableTranches;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TrancheHarvests extends Component {\n\n  state = {\n    rows:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    let rows = [];\n    const distributions = await this.functionsUtil.getTrancheStakingRewardsDistributions(this.props.tokenConfig,this.props.trancheConfig);\n\n    await this.functionsUtil.asyncForEach(Object.keys(distributions), async (token) => {\n      const txs = distributions[token];\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n      await this.functionsUtil.asyncForEach(txs, async (tx) => {\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token}.svg`;\n        const blockInfo = await this.functionsUtil.getBlockInfo(tx.blockNumber);\n        const timeStamp = blockInfo.timestamp*1000;\n        const date = this.functionsUtil.strToMoment(timeStamp).format('YYYY/MM/DD HH:mm');\n        const amount = this.functionsUtil.fixTokenDecimals(tx.returnValues.amount||tx.returnValues.value,tokenConfig.decimals);\n        // console.log(token,date,amount.toString());\n        rows.push({\n          date,\n          token,\n          timeStamp,\n          tokenIcon,\n          hash:tx.transactionHash,\n          amount:this.functionsUtil.formatMoney(amount.toString(),8),\n          shortHash:this.functionsUtil.shortenHash(tx.transactionHash,10,6)\n        });\n      });\n    });\n\n    rows = rows.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    return this.setState({rows});\n  }\n\n  render() {\n    return this.state.rows.length>0 ? (\n      <Flex\n        mb={[0,4]}\n        width={1}\n        flexDirection={'column'}\n        id={'funds-overview-container'}\n      >\n        <Title my={[3,4]}>Staking Rewards Distribution</Title>\n        <CustomList\n          rows={this.state.rows}\n          paginationEnabled={true}\n          handleClick={ props => this.functionsUtil.openWindow(this.functionsUtil.getEtherscanTransactionUrl(props.row.hash)) }\n          cols={[\n            {\n              mobile:false,\n              title:'HASH',\n              props:{\n                width:[0.25,0.25]\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['shortHash'],\n                }\n              ]\n            },\n            {\n              title:'DATE',\n              props:{\n                width:[0.35,0.25],\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['date'],\n                }\n              ]\n            },\n            {\n              title:'TOKEN',\n              props:{\n                width:[0.35,0.25]\n              },\n              fields:[\n                {\n                  type:'image',\n                  props:{\n                    mr:2,\n                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                  },\n                  path:['tokenIcon']\n                },\n                {\n                  type:'text',\n                  path:['token'],\n                }\n              ]\n            },\n            {\n              title:'AMOUNT',\n              props:{\n                width:[0.30,0.25],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['amount'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            }\n          ]}\n          {...this.props}\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default TrancheHarvests;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      trancheBaseApy,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheRealPrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    // console.log('stakingRewards',stakingRewards,stakingEnabled,unstakeEnabled);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,this.functionsUtil.BNify(this.state.trancheBalance).toFixed(),selectedPercentage,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTokenTx.timeStamp);\n\n        const trancheInfos = trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n\n        const conversionRatesTimestamps = {};\n        if (conversionRateField){\n          const blocksTimestamps = {};\n          const conversionRateBlocksCalls = {};\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n              const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n              if (blockInfo.distance === null || distance<blockInfo.distance){\n                blockInfo.distance = distance;\n                blockInfo.trancheInfo = trancheInfo;\n              }\n              return blockInfo;\n            },{\n              distance:null,\n              trancheInfo:null\n            });\n\n            if (blockInfo && blockInfo.trancheInfo){\n              if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n              }\n              blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n              conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,blockInfo.trancheInfo.blockNumber);\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            // }\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Box, Flex, Icon, Text } from \"rimble-ui\";\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type);\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n    }\n    \n    const tokenConfig = this.props.availableTranches[protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for {this.state.token}\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4]\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  colsProps={{\n                    fontSize:['10px','14px'],\n                  }}\n                  cols={[\n                    {\n                      title:'PROTOCOL', \n                      props:{\n                        width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        },\n                        {\n                          mobile:false,\n                          name:'experimentalBadge',\n                          props:{\n                            ml:1,\n                            height:'1.5em'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.15, 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    \n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                          props:{\n                            minPrecision:1,\n                            decimals:this.props.isMobile ? 0 : 2,\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          props:{\n                            flexProps:{\n                              mr:3\n                            }\n                          },\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'APR RATIO',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                      props:{\n                        width:[0.15, 0.1],\n                      },\n                      fields:[\n                        {\n                          name:'trancheAPRSplitRatio',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            height:['1.4em','2em']\n                          }\n                        },\n                        \n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-COMPOUNDING',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                      props:{\n                        width:[0.25,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.16,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    */\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.15],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.2\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:180,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    stakingRewards:\"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens using the staking function\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        decimals: 18,\n        enabled: true,\n        label: 'CVX',\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'CRV',\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      image: 'images/protocols/polygon.svg',\n      label: 'Ethereum ⇔ Polygon Bridge',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","var map = {\n\t\"./mainnet/v1/index.json\": 1960,\n\t\"./testnet/mumbai/index.json\": 1961\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4547;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4549,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4550,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4551,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4552,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4553,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4554,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4555,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4556,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4557,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4558,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4559,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4560,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4561,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4562,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4563,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4564,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4565,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4566,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4567,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4568,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4588,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4589,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4590,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4591,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4592,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4593,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4594,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4595,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4596,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4597,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4598,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4599,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4600,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4601,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4602,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4603,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4604,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4605,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4606,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4607,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4608,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4609,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4610,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4611,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4612,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4613,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4614,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4615,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4616,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4617,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4618,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4619,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4620,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4621,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4622,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4623,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4624,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4625,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4626,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4627,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4628,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4629,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4630,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4631,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4632,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4633,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4634,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4635,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4636,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4637,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4638,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4639,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4640,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4641,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4642,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4643,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4644,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4645,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4646,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4647,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4648,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4649,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4650,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4651,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4652,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4653,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4654,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4655,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4656,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4657,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4658,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4659,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4660,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4661,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4662,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4663,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4664,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4665,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4666,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4667,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4668,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4669,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4670,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4671,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4672,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4673,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4674,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4675,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4676,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4677,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4678,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4679,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4680,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4681,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4682,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4683,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4684,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4685,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4686,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4687,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4688,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4689,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4690,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4691,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4692,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4693,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4694,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4695,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4696,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4697,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4698,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4699,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4700,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4701,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4702,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4703,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4704,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4705,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4706,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4707,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4708,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4709,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4710,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4711,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4712,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4713,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4714,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4715,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4716,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4717,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4718,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4719,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4720,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4721,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4722,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4723,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4724,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4725,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4726,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4727,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4728,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4729,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4730,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4731,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4732,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4733,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4734,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4735,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4736,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4737,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4738,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4739,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4740,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4741,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4742,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4743,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4744,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4745,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4746,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4747,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4748,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4749,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4750,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4751,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4752,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4753,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4754,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4755,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4756,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4757,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4758,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4759,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4760,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4761,\n\t\"./mainnet/v1/index.json\": 1960,\n\t\"./networks.json\": 1959,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4762,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4763,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4764,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4765,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4766,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4767,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4768,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4769,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4770,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4771,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4772,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4773,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4774,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4775,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4776,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4777,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4778,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4779,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4780,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4781,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4801,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4802,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4803,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4804,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4805,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4806,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4807,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4808,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4809,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4810,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4811,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4812,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4813,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4814,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4815,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4816,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4817,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4818,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4819,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4820,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4821,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4822,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4823,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4824,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4825,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4826,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4827,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4828,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4829,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4830,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4831,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4832,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4833,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4834,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4835,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4836,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4837,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4838,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4839,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4840,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4841,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4842,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4843,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4844,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4845,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4846,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4847,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4848,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4849,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4850,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4851,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4852,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4853,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4854,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4855,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4856,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4857,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4858,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4859,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4860,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4861,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4862,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4863,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4864,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4865,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4866,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4867,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4868,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4869,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4870,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4871,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4872,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4873,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4874,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4875,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4876,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4877,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4878,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4879,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4880,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4881,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4882,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4883,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4884,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4885,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4886,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4887,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4888,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4889,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4890,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4891,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4892,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4893,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4894,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4895,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4896,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4897,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4898,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4899,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4900,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4901,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4902,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4903,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4904,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4905,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4906,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4907,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4908,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4909,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4910,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4911,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4912,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4913,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4914,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4915,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4916,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4917,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4918,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4919,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4920,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4921,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4922,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4923,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4924,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4925,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4926,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4927,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4928,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4929,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4930,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4931,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4932,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4933,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4934,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4935,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4936,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4937,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4938,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4939,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4940,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4941,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4942,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4943,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4944,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4945,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4946,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4947,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4948,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4949,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4950,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4951,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4952,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4953,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4954,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4955,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4956,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4957,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4958,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4959,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4960,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4961,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4962,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4963,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4964,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4965,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4966,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4967,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4968,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4969,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4970,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4971,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4972,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4973,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4974,\n\t\"./testnet/mumbai/index.json\": 1961\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4548;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded');\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    const web3Callback = async (initWeb3Index) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',this.state.network,this.state.biconomy,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          // if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          // }\n\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('initWeb3',connectorName,this.state.network,context,useWeb3Provider,web3Provider,web3Host,originalWeb3,web3,this.state.web3,web3!==this.state.web3);\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        // const wallets = await Promise.race([\n        //     this.state.web3.eth.getAccounts(),\n        //     new Promise((resolve) => setTimeout(resolve, 300))\n        // ]);\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(availableTranches && Object.keys(availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.availableTokens = availableTranches;\n            newState.selectedProtocol = selectedProtocol;\n            newState.tokenConfig = availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n    console.log(\"availabble\",this.state.availableStrategies)\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['cachedData','walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}