{"version":3,"sources":["ExtLink/ExtLink.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundButton/RoundButton.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","SmartNumber/SmartNumber.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","TxProgressBar/TxProgressBar.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","GenericSelector/GenericSelector.js","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","AssetSelector/AssetSelector.js","CardIconButton/CardIconButton.js","utilities/components/Header.module.scss","IconBox/IconBox.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","Title/Title.js","GenericChart/GenericChart.js","ExecuteTransaction/ExecuteTransaction.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","Staking/Staking.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","DashboardCard/DashboardCard.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","ConnectBox/ConnectBox.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","FlexLoader/FlexLoader.js","ImageButton/ImageButton.js","AssetField/AssetField.js"],"names":["ExtLink","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","Object","assign","target","rel","this","props","children","Component","ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","width","alignItems","flexDirection","pr","style","flexBasis","flex","justifyContent","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","state","text","functionsUtil","setProps","FunctionsUtil","loadUtils","loadData","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","size","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","onClick","handleClick","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundButton","boxShadow","mainColor","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","_this","objectSpread","defineProperty","applyFilters","toggle","arguments","length","undefined","toggleOpened","resetFilter","resetFilters","_this2","top","zIndex","position","DashboardCard","cardProps","py","px","transition","isInteractive","cursor","isMobile","name","overflow","mt","borderTop","concat","theme","colors","divider","keys","filters","map","filterCategory","filterValues","key","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","Text","ml","values","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","tx","parseFloat","token","includes","sort","b","timeStamp","Math","ceil","forEach","i","selectedToken","tokenConfig","availableTokens","decimals","min","date","Date","getTxAction","parsedValue","tokenAmount","amount","toFixed","momentDate","strToMoment","push","preventDefault","max","loadTxs","transactionsChanged","JSON","stringify","transactions","enabledTokens","count","account","firstBlockNumber","getGlobalConfig","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","pop","blockNumber","parseInt","_this3","_this4","hasActiveFilters","m","FlexLoader","flexProps","minHeight","loaderProps","textProps","id","pt","src_TransactionListFilters_TransactionListFilters","bind","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","window","open","getEtherscanTransactionUrl","rowId","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","SmartNumber","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","left","data","itemPos","xFormatted","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","setStateSafe","newState","callback","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","right","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","protocolAllocationPercParsed","times","globalConfigs","stats","hsl","join","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","mobileChanged","themeModeChanged","themeMode","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","BNify","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","currentDate","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","format","frequencySeconds","_loop","aggregatedBalances","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","button","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","CardIconButton","isActive","image","align","imageProps","useIconOnly","iconColor","iconProps","iconBgColor","gradientButton","empty","select","selectDark","input","IconBox","loadField","hashChanged","accountChanged","output","bgColor","fieldProps","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","Title","lineHeight","HeadingComponent","component","Heading","h1","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","loaderText","ExecuteTransaction","txStatus","console","log","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","Staking","contractInfo","selectedOption","toolProps","contract","initContract","abi","reduce","enabled","SelectedComponent","AssetField","selectToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","url","j","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","tokenBalance","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","enableERC20","executeTx","_amount","signedParameters","_params","methodParams","normalizeTokenAmount","eventValue","signPermit","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","checkTokenApproved","viewOnly","connectorName","infoBox","steps","step","stepIndex","description","required","togglePermitEnabled","balanceSelectorInfo","placeholder","approveDescription","ConnectBox","LpStaking","globalStats","balanceProp","statsLoaded","stakedBalance","rewardMultiplier","accountingData","selectedAction","successMessage","poolTokenPrice","rewardTokenPrice","tokenWrapperProps","distributionSpeed","transactionSucceeded","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","integerValue","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","initialLockedShares","durationSec","tokensPerSecond","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","txReceipt","logs","_this5","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","DAITokenConfig","getSushiswapPoolTokenPrice","getSushiswapConversionRate","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","titleProps","titleParentProps","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","IdleStaking","lockPeriods","lockedEnd","lockExpired","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributorConfig","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","currTime","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","getIdleStakingRewardsTxs","getTokenTotalSupply","genericContractCallCached","getContractBalance","getContractEvents","fromBlock","toBlock","provider","etherscanRewardsTxs","tokenTotalSupply","totalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","tokenName","totalDeposited","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalClaimed","event","claimedAmount","returnValues","totalRewardsFormatted","userDeposited","stakeStartTime","stakedTime","depositTimestamp","ts","depositValue","latestDistribution","latestDistributionTime","stakePeriod","currentProfit","apr","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","borderBottom","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","Button","getIncreaseTimeParams","contractApprovedCallback","NexusMutual","quote","1","2","periodOptions","30","60","90","365","coverId","claimId","capacity","amountValue","periodValue","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionParams","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","coveredTokenAmount","getClaimTransactionParams","incident","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","incidentsInfo","startBlock","buyer","coverBoughtEvents","claimSubmittedEvents","cover","claimSubmittedEvent","_ref4","_ref5","coverDetails","incidentEvents","matchedIncidents","matchedIncident","yieldTokenConfig","sumAssured","coverAssetConfig","expiryDate","payoutOutcome","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","claim","productId","contractAddress","slicedToArray","incidentDate","validUntil","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","getTransactionReceipt","findIndex","paramIsValidToken","urlParams","param2","changeSelectedToken","requiredNetwork","baseEndpoint","makeRequest","response","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","getETHBalance","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","price","priceInNXM","expiresAt","generatedAt","COVER_TYPE","feePercentage","basePrice","priceWithFee","mul","divn","amountInWei","toWei","setSelectedAction","textDecoration","activeColor","reset","utils","toTwosComplement","placement","message","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","CustomField","funcProps","CustomComponent","componentHasChildren","fieldType","fieldPath","path","customValue","getArrayPath","row","Image","Icon","customFieldName","customFieldProps","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","idle","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","Fragment","TotalEarningsCounter","earningsEnd","earningsStart","loadTotalEarnings","contractsInitialized","availableStrategies","counterStyle","oldState","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","earningsPerc","tokenAPY","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","getTokenAprs","avgApr","avgApy","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","availableTokensChanged","getActiveCoverages","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","batchInfo","strategy","deposited","batchDeposits","redeemable","batchRedeems","avgScore","totalBalanceWithScore","tokenScore","amountLentToken","tokenWeight","getTokenScore","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","govTokens","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","getFrequencySeconds","AssetsList","fields","mobile","goToSection","route","h4","desc","showTooltip","showDirection","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","_ref6","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","oldContract","migrateFunction","migration","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","collateral","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","_ref7","DeployB2BVesting","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","inputs","validateForm","checkInputs","vesterImplementation","contracts","getContractPastEvents","proxyCreated","deployedContractsAddresses","implementation","proxy","owner","recipient","vestingPeriod","availableBalance","depositAmounts","total","claimedTokensLog","returnString","fieldPattern","RegExp","inputIndex","inputInfo","getPatternByFieldType","inputValid","match","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","events","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","pattern","inputChange","getEtherscanAddressUrl","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","analytics","google","debugEnabled","addPostfixForTestnet","pageView","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","proposals","7","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","showAPR","protocol","showPrice","aprTooltipMode","distributionMode","distributionFrequency","disabledTokens","COMP","stkAAVE","aToken","addressForPrice","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","addGovTokens","titlePostfix","iconName","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","startTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","availableNetworks","3","4","42","1337","isForked","blocksPerYear","secondsPerYear","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","ens","supportedNetworks","nexus","endpoints","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","snapshot","whitelist","urls","biconomy","enableLogin","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","stake","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","directProps","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","visible","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","showAllTokens","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","badge","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","t0","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fee","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","cachedDataKey","APR","idleDistribution","tokenAllocation","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","BN","toEth","wei","fromWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","ensConfig","addressCheck","current","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","orderedTokensBalance","_args4","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","_args5","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","received","slippage","getCurveAvgBuyPrice","prevAvgBuyPrice","_args7","idleTokensBalance","getFirstDepositTx","deposits","_args8","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args9","acc","userAvgPrice","getAmountLent","amountLents","_args11","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","_callee13","_args13","_context13","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee14","_ref19","allAvailableTokens","_args14","_context14","processStoredTxs","_ref20","_callee15","_args15","_context15","_ref21","_callee16","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args16","_context16","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref22","_callee21","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args21","_context21","baseTokenAddress","_ref23","_callee20","minedTxs","_context20","_ref24","_callee19","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context19","getCurveTokenPrice","t1","_ref25","_callee17","_context17","_x12","_x13","baseTokensConfig","t2","_ref26","_callee18","_context18","_x14","_x15","_x10","_x11","_x9","_ref27","_callee27","txsToProcess","_args27","_context27","_ref28","_callee26","_context26","_ref29","_callee25","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context25","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref30","_callee22","_context22","_x20","_x21","_ref31","_callee23","_context23","_x22","_x23","raw","_ref32","_callee24","_context24","_x24","_x25","decodeLog","_token","_x18","_x19","_x17","_x16","alias","getCustomAddress","setCustomAddress","customAddress","_ref33","_callee28","error_callback","_args28","_context28","catch","_x26","makeEtherscanApiRequest","_ref34","_callee29","apiKeyIndex","_args29","_context29","_x27","_ref35","_callee30","return_data","_args30","_context30","_x28","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","sendGoogleAnalyticsPageview","_callee31","googlePageviewInfo","isOrigin","_args31","_context31","ga","_ref37","_callee33","googleEventsInfo","originOk","currentNetwork","_args33","_context33","_ref38","_callee32","_context32","hitCallback","hitCallbackFail","_x30","_x31","_x29","createContract","_ref39","_callee34","_context34","Contract","_x32","_x33","_x34","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","baseurl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee37","activeOnly","validProposals","_args37","_context37","getCachedData","addr","msg","_ref41","_callee36","checkedStrategies","_context36","metadata","_ref42","_callee35","_context35","symbol","_x36","_x35","_ref43","_callee38","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args38","_context38","_x37","getTokenExchangeRate","_ref44","_callee39","exchangeRateParams","exchangeRate","_context39","_x38","_x39","_ref45","_callee40","_context40","_x40","aprs","allocations","aprWeighted","allocation","quantity","hour","day","week","_callee41","idleTokenConfig","etherscanEndpoint","etherscanTxlist","_context41","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","checkContractPaused","_callee42","contractPaused","_args42","_context42","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref48","_callee44","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context44","lastAllocationsPromise","_ref49","_callee43","lastAllocations","_context43","_x42","_x43","alloc","_x41","checkMigration","_ref50","_callee45","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context45","_x44","_x45","_ref51","_callee46","eventName","_args46","_context46","_x46","_x47","estimateMethodGasUsage","_ref52","_callee47","_contract$methods","functionCall","gasLimit","_ref53","_ref54","_args47","_context47","getGasPrice","estimateGas","_x48","_x49","_ref55","_callee48","callback_receipt","_contract$methods2","_context48","once","confirmationNumber","receipt","_x50","_x51","_x52","_x53","_x54","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref56","_callee49","biconomyInfo","res","_context49","x-api-key","_x55","sendTxWithPermit","_ref57","_callee50","_contract$methods3","messageToSign","_this$getSignaturePar","_context50","encodeABI","_address","personal","sign","_x56","_x57","_x58","_x59","_x60","_x61","buildBiconomyErc20ForwarderTx","_ref58","_callee51","tokenAddress","callData","_context51","erc20ForwarderClient","buildTx","txGas","_x62","_x63","_x64","_x65","_x66","_ref59","_callee53","_context53","_ref60","_callee52","_context52","_x68","_x69","_x67","sendBiconomyTxWithErc20Forwarder","_ref61","_callee54","req","metaInfo","txResponse","fetchReceiptIntervalId","_context54","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x70","_x71","_x72","_x73","sendBiconomyTxWithPersonalSign","_ref62","_callee55","_this$getSignaturePar2","_context55","getNonce","call","_x74","_x75","_x76","_x77","signPermitEIP2612","_ref63","_callee56","erc20Name","spender","deadline","domain","domainData","_context56","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x78","_x79","_x80","_x81","_x82","_x83","_x84","_x85","_ref64","_callee57","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args57","_context57","net","getId","allowed","_x86","_x87","_x88","_ref65","_callee58","permitParams","methodAbi","useNonce","_args58","_context58","_jsonInterface","f","unshift","_x89","_x90","_x91","_x92","_x93","_x94","_x95","sendSignedTx","_ref66","_callee59","MetaTransaction","dataToSign","_context59","_x96","_x97","_x98","_x99","_x100","_ref67","_callee60","contractAddr","walletAddr","_ref68","_ref69","allowance","_context60","getAllowance","_x101","_x102","_x103","_ref70","_callee61","_context61","_x104","_x105","_x106","contractMethodSendWrapperWithValue","txData","disableERC20","loadAssetField","_ref71","_callee62","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref72","_ref73","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref74","_ref75","amountLentCurve1","redeemableBalanceCurve","_ref76","_ref77","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref78","_ref79","amountLent1","redeemableBalance1","_idleGovToken","govTokenConfig","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref80","_ref81","tokenPriceFirstDeposit","_ref82","_ref83","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref84","_ref85","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref86","_ref87","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref88","_ref89","amountLentCurve2","redeemableBalanceCurve1","_ref90","_ref91","redeemableBalance2","_args62","_context62","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x107","_x108","_x109","_x110","getIdleTokenSupply","_ref92","_callee63","idleTokenSupply","_args63","_context63","_x111","getIdleTokenPriceWithFee","_ref93","_callee64","_ref94","_ref95","priceWFee","_args64","_context64","eq","_x112","_x113","_ref96","_callee65","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args65","_context65","_x114","clearCachedData","useLocalStorage","_ref97","_callee66","_ref98","_ref99","idleTokensTotalSupply","userShare","_context66","_x115","_x116","_callee68","_args68","_context68","_ref101","_callee67","coverageTokens","protocolImage","_context67","_x117","_ref102","_callee69","_context69","_x118","getBatchedDeposits","_callee71","filter_by_status","_args71","_context71","_ref104","_callee70","_ref105","_ref106","_context70","_x119","_ref107","_callee72","fixDecimals","_args72","_context72","_x120","_ref108","_callee73","_ref109","_ref110","_args73","_context73","_x121","_x122","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","_ref111","_callee74","_args74","_context74","_x123","_ref112","_callee75","_args75","_context75","_x124","_ref113","_callee76","_args76","_context76","_x125","_x126","getProtocolBalance","_ref114","_callee77","_context77","_x127","_x128","getAprs","_ref115","_callee78","_context78","addresses","_x129","genericIdleCall","_ref116","_callee79","callParams","_args79","_context79","_x130","_ref117","_callee80","_contract$methods4","_args80","_context80","_x131","_x132","getTxDecodedLogs","_ref118","_callee82","logAddr","decodeLogs","internalTransfers","_context82","_ref119","_callee81","_context81","_x137","_x138","_x133","_x134","_x135","_x136","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee83","_context83","_ref121","_callee84","_args84","_context84","getPastEvents","_x139","_x140","_ref122","_callee85","_args85","_context85","_x141","_x142","_ref123","_callee86","_contract$methods5","_args86","_context86","_x143","_x144","_ref124","_callee87","_args87","_context87","_x145","_x146","apr2apy","getUnlentBalance","_ref125","_callee88","unlentBalance","_context88","_x147","_ref126","_callee89","_args89","_context89","_x148","_ref127","_callee91","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_ref131","_ref132","_args91","_context91","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref128","_callee90","_ref129","_ref130","protocolBalance","protocolAllocation","_context90","_x150","_x151","protocolAllocationPerc","getGovTokensBalances","getTokenConversionRate","_x149","_ref133","_callee92","pairAddresses","_ref134","_ref135","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref136","_ref137","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","_context92","_x152","_x153","_ref138","_callee93","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context93","_x154","_x155","_ref139","_callee94","unires","_context94","_x156","_x157","getCurveDepositedTokens","_ref140","_callee95","idleTokensBalances","remainingCurveTokens","_args95","_context95","_x158","getCurveUnevenTokenAmounts","_ref141","_callee96","amounts","max_burn_amount","unevenAmounts","_context96","getCurveDepositContract","_x159","_x160","_callee97","curveRatesInfo","_context97","strategyTokens","getCurveAPYContract","_callee98","blocksForPrevTokenPrice","_ref144","_ref145","prevTokenPrice","blocksMultiplier","curveAPR","_context98","getCurveTokenSupply","_callee99","_context99","getCurvePoolContract","_callee100","_args100","_context100","_callee101","_args101","_context101","_ref149","_callee102","_ref150","_ref151","_context102","_x161","_callee103","depositContractInfo","_context103","getCurveZapContract","_callee104","zapContractInfo","_context104","_callee105","poolContractInfo","_context105","getCurveSwapContract","_callee106","_context106","getCurveIdleTokensAmounts","_callee108","max_slippage","curveTokenSupply","curveTokenShare","_args108","_context108","_ref157","_callee107","curveIdleTokens","_context107","_x162","getCurveTokensAmounts","_callee110","useCoinIndex","_args110","_context110","_ref159","_callee109","_ref160","_ref161","totalTokenSupply","_context109","_x163","getCurveAmounts","_ref162","_callee112","_args112","_context112","_ref163","_callee111","_context111","_x166","_x164","_x165","getCurveTokenAmount","_ref164","_callee113","_args113","_context113","_x167","getCurveSlippage","_ref165","_callee114","uneven_amounts","_ref166","_ref167","virtualPrice","Sv","_args114","_context114","_x168","_x169","_ref168","_callee115","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref169","_ref170","aTokenTotalSupply","aaveAllocationPerc","aaveSpeed","aavePoolShare","_args115","_context115","_x170","_callee117","_args117","_context117","_ref172","_callee116","_ref173","_ref174","_context116","_x171","getStkAaveApr","_ref175","_callee118","aaveConversionRate","stkAaveAPR","stkAaveValue","_args118","_context118","_x172","_x173","getCompAPR","_ref176","_callee119","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args119","_context119","_x174","_x175","getCompSpeed","_ref177","_callee120","cTokenAddress","compSpeed","_context120","_x176","_ref178","_callee121","cTokenInfo","compoundAllocationPerc","_ref179","_ref180","cTokenTotalSupply","compoundPoolShare","_args121","_context121","_x177","_callee123","_args123","_context123","_ref182","_callee122","_ref183","_ref184","_context122","_x178","_callee125","_args125","_context125","_ref186","_callee124","_ref187","_ref188","compApr","_context124","_x179","getTokensCsv","_callee128","csv","_context128","prototype","sum","pv","cv","avg","_ref190","_callee127","_context127","_ref191","_callee126","header","aprAvg","scoreAvg","lastRow","_context126","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x181","_x180","_callee130","_args130","_context130","_ref193","_callee129","compTokenBalance","_context129","_x182","getTokenGovTokens","speed","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref194","_callee132","govTokensUserDistribution","_args132","_context132","_ref195","_callee131","_context131","_x184","_x183","getGovTokensDistributionSpeed","_ref196","_callee134","govTokensDistribution","tokenGovTokens","_args134","_context134","_ref197","_callee133","govSpeed","_context133","_x186","_x185","getGovTokensAprs","_ref198","_callee136","govTokensAprs","_args136","_context136","_ref199","_callee135","_ref200","_ref201","_ref202","_ref203","cTokenConfig","_context135","_x189","_x187","_x188","_callee138","_args138","_context138","_ref205","_callee137","tokenConversionRate","fromTokenConfig","_context137","_x190","getGovTokenConfigByAddress","_callee139","checkShowBalance","govTokensEarnings","_args139","_context139","govTokenAmount","getGovTokensIndexes","_ref207","_callee141","govTokensAmounts","_context141","getGovTokensUserAmounts","_ref208","_callee140","govTokenIndex","govTokenAddress","_context140","getGovTokenAddessByIndex","_x193","_x194","_x191","_x192","_ref209","_callee142","_context142","_x195","_x196","_ref210","_callee143","_context143","_x197","_x198","_callee146","govTokenConfigForced","_args146","_context146","_ref212","_callee145","_context145","_ref213","_callee144","_context144","_x200","_x201","_x199","getTokenFees","_callee147","_args147","_context147","_callee148","_ref216","_ref217","gain","fees","_args148","_context148","_ref218","_callee149","_args149","_context149","_x202","getTotalTVL","_callee150","tokensTVL","_context150","getTokensTVL","totalTVL","tokenTVL","_callee154","_context154","_ref221","_callee153","_context153","_ref222","_callee152","oldTokenTVL","idleTokenName","_ref223","_ref224","oldTokenConfig","_ref228","_ref229","oldTokenPrice","oldTotalSupply","_context152","_ref225","_callee151","_ref226","_ref227","govTokenConversionRate","govTokenBalanceConverted","_context151","_x205","oldProtocols","oldProtocol","protocolPos","_x204","_x203","getSubstackLatestFeed","_callee155","endpointInfo","idleSubstackFeed","latestFeed","_context155","items","getAggregatedStats","_callee156","totalAUM","_args156","_context156","getAggregatedStats_chain","_callee160","avgAPR","_args160","_context160","_ref233","_callee159","_context159","_ref234","_callee158","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context158","_ref235","_callee157","_ref236","_ref237","_context157","_x208","_x207","_x206","getTokenApy","_ref238","_callee161","_context161","_x209","_callee164","_args164","_context164","_ref240","_callee163","_context163","_ref241","_callee162","_ref242","_context162","_x211","_x210","getProtocolsTokensBalances","_callee166","tokenBalances","minTokenBalance","protocolsTokens","_args166","_context166","_ref244","_callee165","tokenContract","_context165","_x212","_ref245","_callee167","_args167","_context167","_x213","_x214","_x215","getAvgAPYStats","_ref246","_callee168","apiResults","_args168","_context168","_x216","_x217","_ref247","_callee169","_conversionRate","_args169","_context169","_x218","_x219","_ref248","_callee170","_ref249","_ref250","_context170","protocolScore","getTokenScoreApi","_x220","_x221","_ref251","_callee171","_context171","_x222","_x223","_ref252","_callee174","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args174","_context174","_ref253","_callee173","addrIndex","protocolApr","protocolApy","govTokenAPR","_context173","_ref254","_callee172","_context172","_x227","_x225","_x226","_x224","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","React","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","contrastColor","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","tokenChanged","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this9","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","FieldComponent","colInfo","colIndex","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","fieldName","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","fieldChanged","contractInitialized","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","tooltipProps","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_ref11","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","buttonLabel","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","formattedValue","_isBigNumber"],"mappings":"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","file":"static/js/main.b357ad98.chunk.js","sourcesContent":["import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          }}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}%).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      tokenTotalSupply,\n      totalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.getTokenTotalSupply(this.props.contractInfo.name),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    const distributedRewards = etherscanRewardsTxs.map( tx => (\n      {\n        hash:tx.hash,\n        tokenName:tx.tokenSymbol,\n        amount:this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals),\n        date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n      }\n    ));\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n      const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n      totalClaimed = totalClaimed.plus(claimedAmount);\n      return totalClaimed;\n    },this.functionsUtil.BNify(0));\n    const totalRewards = claimableRewards ? totalClaimed.plus(claimableRewards) : this.functionsUtil.BNify(0);\n    const totalRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[3] : this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    const latestDistribution = Object.assign([],etherscanRewardsTxs).pop();\n    const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const stakePeriod = latestDistributionTime.minus(stakeStartTime);\n\n    const currentProfit = stakedBalance.gt(0) ? claimable.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const apr = stakePeriod.gt(0) ? currentProfit.times(this.functionsUtil.getGlobalConfig(['network','secondsPerYear'])).div(stakePeriod).times(100) : this.functionsUtil.BNify(0);\n    // console.log('APR',apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),claimable.toFixed(),stakedBalance.toFixed(),latestCheckpoint);\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          (this.state.claimable && this.state.claimable.gt(0)) ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'claim'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                contractName={this.props.tokenConfig.feeDistributor.name}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have rewards to Claim yet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    await Promise.all([\n      this.props.initContract(this.props.contractInfo.name, this.props.contractInfo.address, this.props.contractInfo.abi),\n      this.props.initContract(this.props.incidentsInfo.name, this.props.incidentsInfo.address, this.props.incidentsInfo.abi),\n    ]);\n\n    const fromBlock = this.props.startBlock;\n    // const masterAddress = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'master');\n    // await this.props.initContract('NXMaster', masterAddress, NXMaster);\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.functionsUtil.getContractEvents(this.props.contractInfo.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:this.props.account}}),\n       this.functionsUtil.getContractEvents(this.props.contractInfo.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:this.props.account}})\n    ]);\n\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents);\n\n    const claimableCovers = [];\n    await this.functionsUtil.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.props.contractInfo.name,'getCover',[coverId]),\n        this.functionsUtil.getContractEvents(this.props.incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        // console.log(incident.returnValues.productId,coverDetails.contractAddress,cover.blockNumber,incident.blockNumber,incident.returnValues.incidentDate,coverDetails.validUntil,parseInt(coverDetails.validUntil) + this.props.yieldTokenCoverGracePeriod >= Date.now() / 1000);\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.functionsUtil.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.functionsUtil.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + this.props.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.functionsUtil.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      // console.log('cover',cover,'coverDetails',coverDetails,'matchedIncident',matchedIncident);\n\n      const yieldTokenConfig = Object.values(this.props.toolProps.availableTokens).find( tokenConfig => tokenConfig.address === coverDetails.contractAddress );\n      const sumAssured = this.functionsUtil.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address === coverDetails.coverAsset );\n      const expiryDate = this.functionsUtil.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'getPayoutOutcome',[claimId]);\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.functionsUtil.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.functionsUtil.BNify(0);\n      }\n\n      // Yield token cover is claimable only when there is a matching incident\n      if (matchedIncident) {\n        const claimableAmount = this.functionsUtil.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n        const claimablePrice = this.functionsUtil.BNify(matchedIncident.returnValues.priceBefore).times(0.9);\n        const maxCoveredAmount = this.functionsUtil.BNify(coverDetails.sumAssured).div(claimablePrice);\n        const coveredTokenAmount = this.functionsUtil.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n        claimableCovers.push({\n          label,\n          value,\n          sumAssured,\n          claimId:null,\n          claimedAmount,\n          payoutOutcome,\n          claimableAmount,\n          maxCoveredAmount,\n          coveredTokenAmount,\n          coverAsset:coverAssetConfig.token,\n          incident: {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)},\n        });\n      }\n    });\n\n    /*\n    claimableCovers.push({\n      label:'prova',\n      value:'prova',\n      claimId:true,\n      payoutOutcome:null\n    });\n    */\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const paramIsValidToken = this.props.urlParams.param2 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param2);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    // console.log('changeSelectedToken',selectedToken,tokenConfig);\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                  isActive:true,\n                  isInteractive:false\n                }}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.functionsUtil.fixTokenDecimals(this.state.maxPriceWithFee,this.state.tokenConfig.decimals).toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                                </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                            {\n                              /*\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                action={'Token claim'}\n                                methodName={'claimTokens'}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Claim Tokens',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.claimTransactionSucceeded.bind(this)}\n                                params={}\n                              />\n                              */\n                            }\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy NexusMutual cover without KYC for idleDAIYield or idleUSDTYield',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n\n      if (!protocolInfo.enabled){\n        return;\n      }\n\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    [\n      tokenAllocation.totalAllocationConverted,\n      tokenAllocation.totalAllocationWithUnlentConverted\n    ] = await Promise.all([\n      this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig),\n      this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig)\n    ]);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    window.clearCachedData = this.clearCachedData;\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}