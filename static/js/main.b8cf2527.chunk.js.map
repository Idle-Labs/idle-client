{"version":3,"sources":["CardIconButton/CardIconButton.js","SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","IconBox/IconBox.js","AllocationChart/AllocationChart.js","Faquestion/Faquestion.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","ExecuteTransaction/ExecuteTransaction.js","AssetSelector/AssetSelector.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","TableCellHeader/TableCellHeader.module.scss","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TooltipText/TooltipText.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","TableRow/TableRow.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","configs/availableTranches.js","SendTxWithBalance/SendTxWithBalance.js","Gauges/Gauges.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStakingDisapprove/IdleStakingDisapprove.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","TranchesList/TranchesList.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","ConnectBox/ConnectBox.js","TrancheField/TrancheField.js","ExtLink/ExtLink.js","RoundButton/RoundButton.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","Title/Title.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","AssetField/AssetField.js","ImageButton/ImageButton.js"],"names":["CardIconButton","cardProps","Object","assign","py","width","px","this","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","handleClick","backgroundColor","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","mx","margin","my","alignItems","flexDirection","justifyContent","align","image","iconBgColor","mr","isSidebar","p","borderRadius","theme","colors","transactions","actionBg","redeem","src","height","isMobile","imageProps","useIconOnly","name","icon","size","color","iconColor","iconProps","fontWeight","fontSize","textProps","text","Component","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","iconSize","iconName","ml","hoverColor","onClick","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","divider","key","e","goToSection","RoundIconButton","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","LoadingSpinner","react_default","index_es","className","styles","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","IconBox","isVisible","mt","textAlign","dangerouslySetInnerHTML","__html","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","mb","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","themeMode","availableTokens","getEtherscanTxs","account","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","status","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","CustomIndicatorSeparator","CustomMenu","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","ExecuteTransaction","txStatus","processing","txHash","loading","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","web3","network","progressBarProps","cancelTransaction","bind","endMessage","waitText","execute","componentProps","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","TxProgressBar","txCount","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","bg","twitterIcon","radioBtn","button","gradientButton","empty","select","selectDark","input","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","stakingRewards","tranchesBalance","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","trancheTokenBalance","trancheUserInfo","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getTokenConversionRateUniswap","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args9","tokensToMigrate","totalBalanceConverted","_ref15","_ref16$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_ref19","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","_args11","prevAvgBuyPrice","getAvgBuyPrice","idleTokensBalance","getFirstDepositTx","_callee13","deposits","_args13","_context13","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee14","firstDepositTxs","_args14","_context14","reduce","acc","getTrancheStakingRewardsDistributions","_ref25","_callee16","stakingDistributions","_context16","_ref26","_callee15","eventFilters","transfers","_context15","CDO","getContractEvents","_x10","_x9","getTrancheHarvests","_ref27","_callee18","_ref28","_ref29","stakingRewardsDistributions","autoFarming","harvestsList","_context18","_ref30","_callee17","_context17","_x13","_x11","_x12","getTrancheLastHarvest","_ref31","_callee19","strategyConfig","idleStrategyAddress","latestHarvestBlock","_ref32","_ref33","blockInfo","totalAmount","_context19","Strategy","genericContractCallCachedTTL","initContract","abi","getBlockInfo","returnValues","_x14","getTrancheRewardTokensInfo","_ref34","_callee21","tokensDistribution","_context21","_ref35","_callee20","firstHarvest","prevBlockInfo","lastBlockInfo","latestHarvest","tokenApr","tokenApy","distributionEnded","lastAmount","tokensPerDay","distributionSpeedUnit","tokensPerYear","tokensPerBlock","tranchePoolSize","tokensPerSecond","lastBlockPoolSize","distributionSpeed","convertedTokensPerYear","govTokenConfig","rewardsRateMethod","periodFinishMethod","periodFinish","_ref36","_ref37","_firstHarvest","_latestHarvest","firstBlock","_ref38","_ref39","poolSize","elapsedBlocks","elapsedSeconds","_context20","_address","rewardsRate","now","genericContractCallCached","apr2apy","apr","apy","total","_x17","_x15","_x16","_ref40","_callee23","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref41","_ref42","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_context23","sort","_ref43","_callee22","trancheTokenTransferEvent","tokenTransferEvent","_ref44","_ref45","tokenConversionRate","_context22","_x21","trancheTokenAmount","hashKey","trancheTokens","_x18","_x19","_x20","getTrancheUserTransactions","_ref46","_callee24","_context24","_x22","_x23","_x24","getTrancheFirstDepositTx","_ref47","_callee25","_context25","_x25","_x26","_x27","getAmountDepositedTranche","_ref48","_callee26","_context26","_x28","_x29","_x30","_ref49","_callee27","_ref50","_ref51","userAvgPrice","_context27","_x31","_x32","getAmountLent","_callee28","amountLents","_args28","_context28","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee34","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref54","_ref55","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args34","_context34","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref56","_callee29","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context29","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x33","_ref57","_callee30","_context30","_x34","match","_ref58","_callee31","_context31","_x35","_ref59","_callee32","_context32","_x36","items","to_address","_ref60","_callee33","polygonTx","erc20RootToken","_context33","normalizePolygonTx","exited","maticPOSClient","isCheckPointed","erc20","isWithdrawExited","_x37","getPolygonBaseTxs","_callee35","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args35","_context35","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee36","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args36","_context36","filterEthereumTxs","_callee37","_args37","_context37","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee38","resultData","_resultData","allAvailableTokens","_args38","_context38","processStoredTxs","t1","_callee39","contractInstance","_context39","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref66","_callee40","_ref67","_ref68","_context40","getTransactionReceipt","_x38","_ref69","_callee41","_args41","_context41","_x39","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref70","_callee42","processTransactions","idleTokensAddresses","_args42","_context42","mappedTx","_x40","_x41","filterEtherscanTxs","_ref71","_callee43","processTxs","_args43","_context43","_x42","_ref72","_callee44","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args44","_context44","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x43","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref73","_callee49","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args49","_context49","baseTokenConfig","baseTokenAddress","_ref74","_callee48","minedTxs","_context48","_ref75","_callee47","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context47","getCurveTokenPrice","_ref76","_callee45","_context45","_x48","_x49","baseTokensConfig","t2","_ref77","_callee46","_context46","_x50","_x51","_x46","_x47","_x45","_x44","_ref78","_callee55","txsToProcess","_args55","_context55","_ref79","_callee54","_context54","_ref80","_callee53","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context53","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref81","_callee50","_context50","_x56","_x57","_ref82","_callee51","_context51","_x58","_x59","oldContract","events","raw","_ref83","_callee52","_context52","_x60","_x61","decodeLog","_token","_x54","_x55","_x53","_x52","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref84","_callee56","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args56","_context56","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x62","getBestTranche","_callee57","trancheType","maxApy","trancheTypes","trancheStrategyConfig","_args57","_context57","timetamp","splice","availableTrancheInfo","tInfo","_ref86","_callee58","error_callback","config","_args58","_context58","post","catch","_x63","_ref87","_callee59","_args59","_context59","_x64","_ref88","_callee60","apiKeyIndex","apiKey","_args60","_context60","_x65","_ref89","_callee61","return_data","_args61","_context61","_x66","makeCachedPostRequest","_ref90","_callee62","_args62","_context62","_x67","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee63","page","googlePageviewInfo","isOrigin","_args63","_context63","ga","_ref92","_callee65","googleEventsInfo","debugEnabled","originOk","_args65","_context65","analytics","google","addPostfixForTestnet","availableNetworks","_ref93","_callee64","_context64","hitCallback","hitCallbackFail","_x69","_x70","_x68","createContract","_ref94","_callee66","_context66","_x71","_x72","_x73","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee69","activeOnly","whitelist","proposals","validProposals","_args69","_context69","addr","_ref96","_callee68","checkedStrategies","_context68","end","author","snapshot","strategies","_ref97","_callee67","tokenContract","_context67","_x75","_x74","getAprsFromApi","_callee70","endpointInfo","aprs","_args70","_context70","_ref99","_callee71","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args71","_context71","_x76","getTokenExchangeRate","_ref100","_callee72","exchangeRateParams","exchangeRate","_context72","_x77","_x78","getTokenDecimals","_ref101","_callee73","_context73","_x79","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee74","idleTokenConfig","feeDistributorConfig","_context74","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee75","contractPaused","_args75","_context75","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref104","_callee77","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context77","lastAllocationsPromise","_ref105","_callee76","lastAllocations","_context76","_x81","_x82","alloc","_x80","_ref106","_callee78","oldContractBalance","oldContractTokenDecimals","oldContractName","_context78","_x83","_x84","_ref107","_callee79","eventName","startBlock","endBlock","blocksPerCall","lastBlockNumber","calls","toBlock","all_past_events","_args79","_context79","getBlockNumber","getContractPastEvents","fromBlock","_x85","_x86","estimateMethodGasUsage","_ref108","_callee80","methodParams","_contract$methods","functionCall","gasLimit","_ref109","_ref110","_args80","_context80","getGasPrice","estimateGas","_x87","_x88","_ref111","_callee81","userAddress","signedParameters","callback_receipt","_contract$methods2","_context81","on","once","confirmationNumber","receipt","_x89","_x90","_x91","_x92","_x93","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref112","_callee82","biconomyInfo","res","_context82","limits","apiId","headers","x-api-key","_x94","sendTxWithPermit","_ref113","_callee83","_contract$methods3","messageToSign","_this$getSignaturePar","_context83","encodeABI","personal","sign","_x95","_x96","_x97","_x98","_x99","_x100","buildBiconomyErc20ForwarderTx","_ref114","_callee84","permitType","callData","buildParams","_context84","txGas","erc20ForwarderClient","buildTx","_x101","_x102","_x103","_x104","_x105","_ref115","_callee86","_context86","_ref116","_callee85","_context85","_x107","_x108","_x106","sendBiconomyTxWithErc20Forwarder","_ref117","_callee87","req","metaInfo","txResponse","fetchReceiptIntervalId","_context87","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x109","_x110","_x111","_x112","sendBiconomyTxWithPersonalSign","_ref118","_callee88","_this$getSignaturePar2","_context88","getNonce","_x113","_x114","_x115","_x116","signPermitEIP2612","_ref119","_callee89","erc20Name","owner","spender","deadline","domain","permit","domainData","_context89","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x117","_x118","_x119","_x120","_x121","_x122","_x123","_x124","signPermit","_ref120","_callee90","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args90","_context90","net","getId","round","nonceMethod","pow","allowed","response","_x125","_x126","_x127","_ref121","_callee91","permitParams","methodAbi","useNonce","_args91","_context91","_jsonInterface","f","unshift","_x128","_x129","_x130","_x131","_x132","_x133","_x134","sendSignedTx","_ref122","_callee92","MetaTransaction","dataToSign","_context92","_x135","_x136","_x137","_x138","_x139","checkTokenApproved","_ref123","_callee93","contractAddr","walletAddr","_ref124","_ref125","allowance","_context93","getAllowance","gte","_x140","_x141","_x142","_ref126","_callee94","_context94","_x143","_x144","_x145","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20MaxAllowance","enableERC20","getBestToken","_callee96","highestValue","_args96","_context96","lendRates","aprInfo","tokenAPR","_ref128","_callee95","_context95","_x146","_ref129","_callee97","_args97","_context97","_x147","_x148","calculateGaugeBoost","_ref130","_callee98","gaugeName","veTokenConfig","gaugeConfig","aggcalls","l","voting_balance","voting_total","working_balances","working_supply","L","TOKENLESS_PRODUCTION","lim","old_bal","noboost_lim","noboost_supply","_working_supply","_context98","getTokenTotalSupply","_x149","_x150","_x151","getGaugeRewardsTokens","_ref131","_callee100","rewardTokensBalances","rewardTokens","claimableTokens","rewardContractAddress","multiRewardsContractName","multiRewardsConfig","MultirewardsAbi","tokenIndexes","_args100","_context100","maxRewards","_ref132","_callee99","tokenIndex","rewardTokenAddress","rewardTokenBalance","_context99","getTokenConfigByAddress","_x153","_x152","_ref133","_callee102","_args102","_context102","_ref134","_callee101","tokenGlobalConfig","stakingRewardsContract","_context101","_x156","_x154","_x155","_ref135","_callee103","field","addGovTokens","_args103","_context103","loadTrancheField","_x157","_x158","_x159","_x160","_x161","_x162","_x163","_x164","_ref136","_callee104","formatValue","addTokenName","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","show_idle_apy","idleGovTokenConfig","_ref137","_ref138","totalSupply","virtualPrice","_ref139","_ref140","lastPrice1","staked1","_ref141","_ref142","deposited1","lastPrice","_ref143","_ref144","redeemable1","staked2","_ref145","_ref146","earningsStart","trancheApy2","deposited3","earningsEnd","_ref147","_ref148","trancheFee","earningsCounter","feesEnd","feesStart","_ref149","_ref150","deposited4","redeemable3","_ref151","_ref152","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","curveBaseApy","_ref153","_ref154","_ref155","_ref156","earningsPerc","secondsFromFirstTx","_ref157","_ref158","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args104","_context104","AA","BB","curveApyPath","getCurveAPYs","rewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","stakingRewardsTokenConfig","govToken","_x165","_x166","_x167","_x168","_x169","_x170","_x171","loadAssetField","_ref159","_callee105","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref160","_ref161","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref162","_ref163","amountLentCurve1","redeemableBalanceCurve","_ref164","_ref165","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref166","_ref167","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref168","_ref169","tokenPriceFirstDeposit","_ref170","_ref171","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref172","_ref173","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref174","_ref175","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref176","_ref177","amountLentCurve2","redeemableBalanceCurve1","_ref178","_ref179","redeemableBalance2","_args105","_context105","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x172","_x173","_x174","_x175","getIdleTokenSupply","_ref180","_callee106","idleTokenSupply","_args106","_context106","_x176","getIdleTokenPriceWithFee","_ref181","_callee107","_ref182","_ref183","fee","priceWFee","_args107","_context107","eq","_x177","_x178","_ref184","_callee108","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args108","_context108","_x179","clearCachedData","clear_all","parent_key","useLocalStorage","requiredNetworkId","allCachedData","expirationDate","_ref185","_callee109","_ref186","_ref187","idleTokensTotalSupply","userShare","_context109","_x180","_x181","openWindow","open","getActiveCoverages","_callee111","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args111","_context111","coverages","_ref189","_callee110","coverage","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context110","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x182","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref190","_callee113","incidentsInfo","_ref191","_ref192","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context113","directProps","contractInfo","buyer","_ref193","_callee112","cover","coverId","claimSubmittedEvent","_ref194","_ref195","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref196","_ref197","_context112","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x184","_x183","getBatchedDepositExecutions","_ref198","_callee114","_context114","_x185","getBatchedDeposits","_callee116","filter_by_status","batchDepositConfig","batchedDeposits","_args116","_context116","_ref200","_callee115","currBatchIndex","batchIndex","_ref201","_ref202","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context115","_x186","getETHBalance","_ref203","_callee117","fixDecimals","_args117","_context117","_x187","_ref204","_callee118","_ref205","_ref206","_args118","_context118","ERC20","_x188","_x189","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref207","_callee119","_args119","_context119","_x190","_ref208","_callee120","_args120","_context120","_x191","_ref209","_callee121","_args121","_context121","_x192","_x193","getProtocolBalance","_ref210","_callee122","_context122","_x194","_x195","getAprs","_ref211","_callee123","_context123","addresses","_x196","genericIdleCall","_ref212","_callee124","callParams","_args124","_context124","_x197","_ref213","_callee125","_contract$methods4","_args125","_context125","_x198","_x199","_ref214","_callee127","_args127","_context127","_ref215","_callee126","_context126","_x201","_x202","_x200","getTxDecodedLogs","_ref216","_callee129","logAddr","decodeLogs","internalTransfers","_context129","_ref217","_callee128","_context128","_x207","_x208","_x203","_x204","_x205","_x206","blocksToSeconds","blocks","blocksPerSeconds","_callee130","_context130","_callee131","blockInfoToSave","_args131","_context131","getBlock","_ref220","_callee132","_args132","_context132","getPastEvents","_x209","_x210","_ref221","_callee133","_args133","_context133","_x211","_x212","_ref222","_callee134","_args134","_context134","_x213","_x214","cachedContractCall","_ref223","_callee135","_args135","_context135","_x215","_x216","_ref224","_callee136","_contract$methods5","_args136","_context136","_x217","_x218","_ref225","_callee137","async","_args137","_context137","_x219","_x220","getUnlentBalance","_ref226","_callee138","unlentBalance","_context138","_x221","_ref227","_callee139","_args139","_context139","_x222","getLastAllocations","_ref228","_callee141","tokenAllocations","_context141","_ref229","_callee140","_context140","_x224","_x225","_x223","_ref230","_callee142","protocolsAprs","_ref231","_ref232","govTokensBalances","_args142","_context142","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x226","getSushiswapPoolTokenPrice","_ref233","_callee143","_ref234","_ref235","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref236","_ref237","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context143","getSushiswapConversionRate","_x227","_ref238","_callee144","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context144","_x228","_x229","_ref239","_callee145","useWETH","unires","_args145","_context145","addressForPrice","_x230","_x231","getCurveDepositedTokens","_ref240","_callee146","idleTokensBalances","remainingCurveTokens","_args146","_context146","_x232","getCurveUnevenTokenAmounts","_ref241","_callee147","amounts","max_burn_amount","unevenAmounts","_context147","getCurveDepositContract","_x233","_x234","_callee148","curveRatesInfo","_args148","_context148","_callee149","_context149","strategyTokens","getCurveAPYContract","_callee150","blocksForPrevTokenPrice","_ref245","_ref246","prevTokenPrice","blocksMultiplier","curveAPR","_context150","getCurveTokenSupply","_callee151","_context151","getCurvePoolContract","_callee152","_args152","_context152","_callee153","_args153","_context153","_ref250","_callee154","_ref251","_ref252","_context154","_x235","_callee155","depositContractInfo","_context155","getCurveZapContract","_callee156","zapContractInfo","_context156","_callee157","poolContractInfo","_context157","getCurveSwapContract","_callee158","migrationContractInfo","_context158","getCurveIdleTokensAmounts","_callee160","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args160","_context160","_ref258","_callee159","coinIndex","curveIdleTokens","_context159","migrationParams","_x236","getCurveTokensAmounts","_callee162","useCoinIndex","_args162","_context162","_ref260","_callee161","_ref261","_ref262","idleTokenPrice","totalTokenSupply","_context161","_x237","getCurveAmounts","_ref263","_callee164","_args164","_context164","_ref264","_callee163","_context163","_x240","_x238","_x239","getCurveTokenAmount","_ref265","_callee165","_args165","_context165","_x241","getCurveSlippage","_ref266","_callee166","uneven_amounts","depositContract","_ref267","_ref268","Sv","_args166","_context166","_x242","_x243","_ref269","_callee167","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref270","_ref271","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args167","_context167","IAaveIncentivesController","emissionPerSecond","_x244","_callee169","_args169","_context169","_ref273","_callee168","_ref274","_ref275","_context168","_x245","getWMaticApr","_ref276","_callee170","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args170","_context170","_x246","_x247","getStkAaveApr","_ref277","_callee171","aaveConversionRate","stkAaveAPR","stkAaveValue","_args171","_context171","_x248","_x249","getCompAPR","_ref278","_callee172","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args172","_context172","_x250","_x251","getCompSpeed","_ref279","_callee173","cTokenAddress","compSpeed","_context173","_x252","_ref280","_callee174","cTokenInfo","compoundAllocationPerc","_ref281","_ref282","cTokenTotalSupply","compoundPoolShare","_args174","_context174","_x253","_callee176","_args176","_context176","_ref284","_callee175","_ref285","_ref286","_context175","_x254","_callee178","_args178","_context178","_ref288","_callee177","_ref289","_ref290","compApr","_context177","_x255","getTokensCsv","_callee181","csv","_context181","prototype","sum","pv","cv","avg","_ref292","_callee180","_context180","_ref293","_callee179","rates","header","rows","aprAvg","scoreAvg","lastRow","_context179","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x257","_x256","_callee183","convertToken","_args183","_context183","_ref295","_callee182","compTokenBalance","_context182","_x258","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref296","_callee185","govTokensUserDistribution","_args185","_context185","_ref297","_callee184","_context184","_x260","_x259","getGovTokensDistributionSpeed","_ref298","_callee187","govTokensDistribution","_args187","_context187","_ref299","_callee186","govSpeed","_context186","_x262","_x261","getGovTokensAprs","_ref300","_callee189","govTokensAprs","_args189","_context189","_ref301","_callee188","_ref302","_ref303","_ref304","_ref305","cTokenConfig","_context188","aprTooltipMode","_x265","_x263","_x264","_callee191","_args191","_context191","_ref307","_callee190","govTokenBalance","fromTokenConfig","_context190","_x266","getTokenIcon","tokenConfigStats","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee192","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args192","_context192","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref309","_callee194","govTokensAmounts","_context194","getGovTokensUserAmounts","_ref310","_callee193","govTokenIndex","govTokenAddress","_context193","getGovTokenAddessByIndex","_x269","_x270","_x267","_x268","_ref311","_callee195","_context195","_x271","_x272","_ref312","_callee196","_context196","_x273","_x274","_callee199","govTokenConfigForced","_args199","_context199","_ref314","_callee198","_context198","_ref315","_callee197","_context197","_x276","_x277","_x275","getTokenFees","_callee200","_args200","_context200","_callee201","_ref318","_ref319","feePercentage","gain","fees","_args201","_context201","_ref320","_callee202","_args202","_context202","_x278","getTotalTVL","_callee203","tokensTVL","_context203","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee207","_context207","_ref323","_callee206","_context206","_ref324","_callee205","oldTokenTVL","idleTokenName","_ref325","_ref326","oldTokenConfig","_ref330","_ref331","oldTokenPrice","oldTotalSupply","_context205","showAUM","_ref327","_callee204","_ref328","_ref329","govTokenConversionRate","govTokenBalanceConverted","_context204","_x281","oldProtocols","oldProtocol","protocolPos","_x280","_x279","getSubstackLatestFeed","_callee208","idleSubstackFeed","latestFeed","_context208","getTrancheAggregatedStats","_callee212","totalAUM","_args212","_context212","_ref334","_callee211","_context211","_ref335","_callee210","_context210","_ref336","_callee209","_ref337","_ref338","_context209","_x284","_x283","_x282","getAggregatedStats","_callee214","allNetworks","networkIds","tvls","_args214","_context214","_ref340","_callee213","_context213","_x285","getAggregatedStats_chain","_callee219","avgAPR","_args219","_context219","availableStrategiesNetworks","_ref342","_callee218","_context218","_ref343","_callee217","_context217","_ref344","_callee216","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context216","_ref345","_callee215","_ref346","_ref347","_context215","_x289","_x288","_x287","_x286","getTokenApy","_ref348","_callee220","_context220","_x290","getTokensToMigrate","_callee223","_args223","_context223","_ref350","_callee222","_context222","_ref351","_callee221","_ref352","_context221","_x292","_x291","getProtocolsTokensBalances","_callee225","tokenBalances","minTokenBalance","protocolsTokens","_args225","_context225","_ref354","_callee224","_context224","_x293","getTokenConversionRateField","_ref355","_callee226","_args226","_context226","_x294","_x295","_ref356","_callee227","_args227","_context227","_x296","_x297","_x298","getAvgAPYStats","_ref357","_callee228","apiResults","_args228","_context228","_x299","_x300","_ref358","_callee229","statsTokenConfig","ToTokenConfig","_args229","_context229","addressForPriceFrom","_x301","_ref359","_callee230","count","_conversionRate","_args230","_context230","_x302","_x303","getTokenScore","_ref360","_callee231","_ref361","_ref362","tokenScore","_context231","protocolScore","getTokenScoreApi","_x304","_x305","_ref363","_callee232","scores","_context232","_x306","_x307","_ref364","_callee233","idleGovTokenShowAPR","idleAPR","_args233","_context233","_x308","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","titleProps","description","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","cols","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","_contracts_ERC20_json__WEBPACK_IMPORTED_MODULE_0__","_contracts_IdleCDO_json__WEBPACK_IMPORTED_MODULE_1__","_contracts_IdleStrategy_json__WEBPACK_IMPORTED_MODULE_2__","_contracts_IdleCDOTrancheRewards_json__WEBPACK_IMPORTED_MODULE_3__","_contracts_TrancheStakingRewards_json__WEBPACK_IMPORTED_MODULE_4__","DAI","IdleCDO","IdleStrategy","messages","stake","unstake","unstakeWithBalance","IdleCDOTrancheRewards","FEI","lido","stETH","buyInstructions","TrancheStakingRewards","convex","FRAX3CRV","MIM3CRV","steCRV","ALUSD3CRV","3EUR","MUSD3CRV","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","approveMaxAllowance","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","actionChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","textTransform","ConnectBox","Gauges","canVote","claimText","unlockDate","balanceProp","noFundsText","lastUserVote","veTokenBalance","claimSucceded","claimToken","availableGauges","votingPowerUsed","stakeAction","selectedAction","gaugeTotalSupply","distributionRate","gaugeWorkingSupply","veTokenTotalSupply","availableVotingPower","gaugePeriodTimestamp","gaugeWorkingBalances","claimableRewardsTokens","loadGaugeData","stakeActionChanged","loadTokenData","toolProps","obj","urlParams","param2","veToken","trancheTokenConfig","trancheToken","claimableRewards","loadGauges","veTokenBalanceUsed","nextUnlockTime","WEIGHT_VOTE_DELAY","_this5","gaugeToken","gaugeWeight","gaugeUserShare","gaugeDistributionRate","veTokenShare","userBaseDistribution","boostMultiplier","userBoostedDistribution","_this6","weight","votingWeight","depositedAmount","withdrawnAmount","_this7","votingPowerPercentage","gaugeAddress","_this8","setSelectedAction","setStakeAction","setClaimToken","Button","transactionSucceeded","src_SendTxWithBalance_SendTxWithBalance","FlexLoader","borderBottom","TranchesList","enabledProtocols","colsProps","Staking","selectedOption","SelectedComponent","component","AssetField","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","trancheBalance","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","flexBasis","TrancheField","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","modalApy","modalAction","lastHarvest","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheTokenToRedeem","isStake","isDeposit","isWithdraw","option","selectTranche","borderTop","ImageButton","contractApprovedCallback","PortfolioEquityTranches","transactionsList","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","trancheAAInfos","trancheBBInfos","timeStamp_start","conversionRatesTimestamps","blocksTimestamps","conversionRateBlocksCalls","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","then","param1","param3","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","portfolioDonutData","balanceValue","tokenPercentage","trancheName","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","loadStats","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStakingDisapprove","disapproveAllowance","requiredNetworkChanged","accountInizialized","governanceTokenName","stkIdleConfig","stkIdleBalance","idleBalance","idleAllowance","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","_this9","isLock","isClaim","isIncrease","canIncrease","src_IdleStakingDisapprove_IdleStakingDisapprove","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","maticPOSClientChanged","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","selectedTransactionHash","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","logEventSignature","genericParams","erc20LogEventSignature","exitUtil","buildPayloadForExit","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","gaugeBoost","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","GaugeController","GaugeDistributor","GaugeDistributorProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","extraicons","best","iconDark","iconInactive","iconInactiveDark","gauges","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","timeout","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","MUSD","ANGLE","STECRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","mstable","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","MultiRewards","LiquidityGauge","multiRewards","mUSD","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initMaticPosClient","polygonConfig","web3PolygonRpc","web3InfuraRpc","maticProvider","parentProvider","maticPOSClientConfig","use","Web3ClientPlugin","POSClient","parent","defaultConfig","child","useWeb3Provider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args8","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","newContracts","contractFound","contractIndex","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_19__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","CustomTooltip","xFormatted","CustomTooltipRow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","HeadingComponent","TwitterShareButton","share","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_8__","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.b8cf2527.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? this.props.iconBgColor ? (\n              <Flex\n                mr={this.props.isSidebar ? 0 : 2}\n                p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n                borderRadius={\"50%\"}\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                backgroundColor={\n                  this.props.iconBgColor\n                    ? this.props.iconBgColor\n                    : this.props.theme.colors.transactions.actionBg.redeem\n                }\n              >\n                <Image\n                  align={\"center\"}\n                  src={this.props.image}\n                  height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                  width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                  {...this.props.imageProps}\n                />\n              </Flex>\n            ) : (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#8e8d8d\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0))) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getTokenConversionRateUniswap(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    return harvestsList;\n  }\n  getTrancheLastHarvest = async (tokenConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n      const latestHarvestBlock = await this.genericContractCall(strategyConfig.name,'latestHarvestBlock');\n      if (latestHarvestBlock){\n        const eventFilters = {\n          to: idleStrategyAddress\n        };\n        const [\n          blockInfo,\n          transfers,\n        ] = await Promise.all([\n          this.getBlockInfo(latestHarvestBlock),\n          this.getContractEvents(tokenConfig.token, 'Transfer', latestHarvestBlock, parseInt(latestHarvestBlock)+1, {filter: eventFilters })\n        ]);\n\n        if (transfers && transfers.length) {\n          const totalAmount = transfers.reduce( (amount,t) => {\n            amount = amount.plus(this.BNify(t.returnValues.value));\n            return amount;\n          },this.BNify(0));\n\n          return {\n            amount:totalAmount,\n            timestamp:blockInfo.timestamp,\n            blockNumber:latestHarvestBlock,\n            transactionHash:transfers[0].transactionHash\n          };\n        }\n      }\n    }\n\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let prevBlockInfo = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getGlobalConfig(['stats', 'tokens', token]);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n        const eventFilters = {\n          from: tokenConfig.CDO.address,\n          to: trancheConfig.CDORewards.address\n        }\n\n        const transfers = await this.getContractEvents(token, 'Transfer', tokenConfig.blockNumber, 'latest', { filter: eventFilters });\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n          [\n            prevBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (prevBlockInfo && lastBlockInfo) {\n            let poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    // console.log('getTrancheUserInfo_1',trancheConfig.name,trancheConfig.blockNumber,'underlyingEventsFilters',underlyingEventsFilters);\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } })\n    ]);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = underlying_deposits.concat(underlying_redeems).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = trancheToken_deposits.concat(trancheToken_redeems).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            if (polygonTx.action === 'Withdraw') {\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = await this.props.maticPOSClient.isCheckPointed(polygonTx.hash);\n              polygonTx.exited = false;\n\n              if (tokenConfig.rootToken && polygonTx.included){\n                const erc20RootToken = this.props.maticPOSClient.erc20(tokenConfig.rootToken.address,true);\n                polygonTx.exited = await erc20RootToken.isWithdrawExited(polygonTx.hash);\n              }\n              \n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n    \n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    let results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n\n    if (!size){\n      return false;\n    }\n      \n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranches[protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      return axios(config);\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null, error_callback = false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, error_callback, config);\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, startBlock=0, endBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = endBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(endBlock);\n    startBlock = parseInt(startBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(startBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = startBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber && endBlock === 'latest'){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    return all_past_events.reduce( (events,d) => {\n      events = events.concat(d);\n      return events;\n    },[]);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20MaxAllowance = (contractName, address, allowance, callback, callback_receipt) => {\n    console.log('enableERC20MaxAllowance',contractName, address, allowance);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.integerValue(allowance) // Approve for a specific allowance\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  calculateGaugeBoost = async (gaugeName,stakedBalance,account) => {\n\n    let boost = this.BNify(1);\n\n    account = account ? account : this.props.account;\n    const veTokenConfig = this.getGlobalConfig(['tools','gauges','props','veToken']);\n    const gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',gaugeName]);\n    if (!gaugeConfig || !account){\n      return boost;\n    }\n\n    const aggcalls = await Promise.all([\n      this.getTokenBalance(veTokenConfig.token,account,false),\n      this.getTokenTotalSupply(veTokenConfig.token),\n      this.genericContractCallCached(gaugeConfig.name,'working_balances',[account]),\n      this.genericContractCallCached(gaugeConfig.name,'working_supply'),\n      this.genericContractCallCached(gaugeConfig.name,'totalSupply'),\n      this.getTokenBalance(gaugeConfig.name,account)\n    ]);\n\n    let decoded = aggcalls.map(n => this.BNify(n));\n\n    if (this.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.BNify(0);\n    }\n    stakedBalance = this.BNify(stakedBalance).plus(decoded[5]);\n\n    let l = this.BNify(this.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = decoded[0];\n    let voting_total = decoded[1];\n    let working_balances = decoded[2];\n    let working_supply = decoded[3];\n    let L = decoded[4].plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = Math.min(l, lim);\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    boost = this.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    console.log('calculateGaugeBoost',gaugeName,voting_balance.toFixed(),voting_total.toFixed(),l.toFixed(),L.toFixed(),lim.toFixed(),_working_supply.toFixed(),noboost_lim.toFixed(),noboost_supply.toFixed(),boost.toFixed());\n\n    return boost;\n  }\n  getGaugeRewardsTokens = async (gaugeConfig, account=null) => {\n    const rewardTokensBalances = {};\n    const rewardTokens = gaugeConfig.rewardTokens ? gaugeConfig.rewardTokens : [];\n\n    if (rewardTokens.length){\n      const claimableTokens = account ? await this.genericContractCall(gaugeConfig.name,'claimable_tokens',[account]) : this.BNify(0);\n      rewardTokensBalances[rewardTokens[0]] = this.BNify(claimableTokens);\n    }\n\n    // Add multiRewards tokens\n    const rewardContractAddress = await this.genericContractCallCached(gaugeConfig.name,'reward_contract');\n    if (rewardContractAddress && rewardContractAddress !== '0x0000000000000000000000000000000000000000'){\n      const multiRewardsContractName = `${gaugeConfig.name}_multireward_${rewardContractAddress}`;\n\n      const multiRewardsConfig = this.getGlobalConfig(['tools','gauges','props','contracts','MultiRewards']);\n\n      const MultirewardsAbi = multiRewardsConfig.abi;\n      await this.props.initContract(multiRewardsContractName, rewardContractAddress, MultirewardsAbi);\n\n      const tokenIndexes = Array.from(Array(multiRewardsConfig.maxRewards).keys());\n      await this.asyncForEach(tokenIndexes,async (tokenIndex) => {\n        try {\n          const rewardTokenAddress = await this.genericContractCallCached(multiRewardsContractName,'rewardTokens',[tokenIndex]);\n          if (rewardTokenAddress){\n            const tokenConfig = this.getTokenConfigByAddress(rewardTokenAddress);\n            if (tokenConfig){\n              const rewardTokenBalance = account ? await this.genericContractCall(gaugeConfig.name,'claimable_reward_write',[account,rewardTokenAddress]) : this.BNify(0);\n              rewardTokensBalances[tokenConfig.token] = this.BNify(rewardTokenBalance);\n              rewardTokens.push(tokenConfig.token);\n            }\n          }\n        } catch (err) {\n\n        }\n      });\n    }\n\n    return rewardTokens ? rewardTokens.reduce( (rewardTokens,rewardToken) => {\n      rewardTokens[rewardToken] = this.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]) || {};\n      rewardTokens[rewardToken].balance = rewardTokensBalances[rewardToken] || this.BNify(0);\n      return rewardTokens;\n    },{}) : null;\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    // console.log('loadTrancheField',protocol,token,tranche,stakingRewards,stakingEnabled);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals,trancheConfig.functions.stakedBalance)\n          ]);\n\n          if (staked1 && lastPrice1) {\n            output = this.BNify(staked1).times(lastPrice1);\n            // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'limit',3600);\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens',3600),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens',3600)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken.toUpperCase()]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName.toUpperCase()]);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n      return blockInfo;\n    }\n\n    return null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest',) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenIcon = (token) => {\n    if (!token){\n      return null;\n    }\n    const tokenConfigStats = this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n    return tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : `images/tokens/${token}.svg`;\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = null;\n      try {\n        tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      } catch (err){\n        // console.log('getAggregatedStats - ERROR', err);\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    if (!totalAUM || this.BNify(totalAUM).isNaN() || this.BNify(totalAUM).lte(0)){\n      avgAPY = this.BNify(0);\n      totalAUM = this.BNify(0);\n      let tvls = await this.getAggregatedStats_chain();\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    }\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true, networkId = null) => {\n\n    networkId = networkId || this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}_${networkId}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategiesNetworks), async (networkId) => {\n      const strategies = this.props.availableStrategiesNetworks[networkId];\n      await this.asyncForEach(Object.keys(strategies), async (strategy) => {\n        const isRisk = strategy === 'risk';\n        const availableTokens = strategies[strategy];\n        await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n          const tokenConfig = availableTokens[token];\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n          const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n            const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n            totalAUM = totalAUM.plus(tokenAUM);\n            // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n            if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n              avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n              avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n            }\n          }\n\n          // Add Gov Tokens\n          const govTokens = this.getTokenGovTokens(tokenConfig);\n          if (govTokens) {\n            await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n              const govTokenConfig = govTokens[govToken];\n              const [\n                tokenBalance,\n                tokenConversionRate\n              ] = await Promise.all([\n                this.getProtocolBalance(govToken, tokenConfig.idle.address),\n                this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n              ]);\n\n              if (tokenBalance && tokenConversionRate) {\n                const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n                if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                  // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                  totalAUM = totalAUM.plus(tokenBalanceConverted);\n                }\n              }\n            });\n          }\n\n          // Get old token allocation\n          if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n            const oldTokenConfig = Object.assign({}, tokenConfig);\n            oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n            oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols) {\n              oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n                if (foundProtocol) {\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n            if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n              const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n              totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n              // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n            }\n          }\n        });\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : null;\n\n    // Replace from token address\n    if (statsTokenConfig.addressForPriceFrom){\n      DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n    }\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    // Don't use WETH in the path\n    const useWETH = !statsTokenConfig.addressForPriceFrom;\n\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      description:'This strategy accrue additional interest after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      messages:{\n        buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf',\n          periodFinish:'periodFinish'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:false,\n          stakingRewards:[\n            {\n              token:'LDO',\n              enabled:true,\n              address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n            }\n          ],\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_lido_stETH_AA',\n          address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  /*\n  mstable:{\n    mUSD:{\n      abi:ERC20,\n      decimals:18,\n      token:'mUSD',\n      protocol:'mstable',\n      autoFarming:['MTA'],\n      blockNumber:14184007,\n      address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_mstable_mUSD',\n        address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_mstable_mUSD'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:false,\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_mstable_mUSD_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'AA_mstable_mUSD',\n        token:'AA_mstable_mUSD',\n        label:'mstable mUSD AA',\n        address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'BB_mstable_mUSD',\n        token:'BB_mstable_mUSD',\n        label:'mstable mUSD BB',\n        address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n      }\n    }\n  },\n  */\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      curveApyPath:['apy','day','frax'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MIM3CRV',\n      protocol:'convex',\n      blockNumber:13848124,\n      curveApyPath:['apy','day','mim'],\n      autoFarming:['CVX','CRV','SPELL'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    },\n    steCRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'steCRV',\n      protocol:'convex',\n      blockNumber:14182975,\n      autoFarming:['CVX','CRV','LDO'],\n      curveApyPath:['apy','day','steth'],\n      address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_steCRV',\n        address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_steCRV'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'AA_convex_steCRV',\n        token:'AA_convex_steCRV',\n        label:'convex steCRV AA',\n        address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'BB_convex_steCRV',\n        token:'BB_convex_steCRV',\n        label:'convex steCRV BB',\n        address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n      }\n    },\n    ALUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      protocol:'convex',\n      token:'ALUSD3CRV',\n      blockNumber:14177732,\n      autoFarming:['CVX','CRV'],\n      address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_alusd3crv',\n        address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_alusd3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'AA_convex_alusd3crv',\n        token:'AA_convex_alusd3crv',\n        label:'convex alusd3crv AA',\n        address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'BB_convex_alusd3crv',\n        token:'BB_convex_alusd3crv',\n        label:'convex alusd3crv BB',\n        address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n      }\n    },\n    \"3EUR\":{\n      abi:ERC20,\n      decimals:18,\n      token:'3EUR',\n      protocol:'convex',\n      blockNumber:14177892,\n      autoFarming:['CVX','CRV','ANGLE'],\n      address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_3eur',\n        address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_3eur'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'AA_convex_3eur',\n        token:'AA_convex_3eur',\n        label:'convex 3eur AA',\n        address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'BB_convex_3eur',\n        token:'BB_convex_3eur',\n        label:'convex 3eur BB',\n        address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n      }\n    },\n    MUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MUSD3CRV',\n      protocol:'convex',\n      blockNumber:14177794,\n      autoFarming:['CVX','CRV'],\n      address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_musd3crv',\n        address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_musd3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'AA_convex_musd3crv',\n        token:'AA_convex_musd3crv',\n        label:'convex musd3crv AA',\n        address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'BB_convex_musd3crv',\n        token:'BB_convex_musd3crv',\n        label:'convex musd3crv BB',\n        address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n      }\n    }\n  }\n};\n\nexport default availableTranches;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n      if (this.props.approveMaxAllowance && !this.functionsUtil.BNify(this.props.approveMaxAllowance).isNaN()){\n        this.functionsUtil.enableERC20MaxAllowance(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.approveMaxAllowance,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n\n    // console.log('checkContractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = !!this.props.approveEnabled;\n\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n\n    const contractApproved = approveEnabled ? await this.checkContractApproved() : true;\n\n    const newState = {\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    };\n\n    this.setState(newState);\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                dangerouslySetInnerHTML={{\n                                  __html: this.props.balanceSelectorInfo.text\n                                }}\n                              />\n                              {\n                                this.props.balanceSelectorInfo.tooltip && (\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.props.balanceSelectorInfo.tooltip}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Heading, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass Gauges extends Component {\n\n  state = {\n    canVote:true,\n    infoBox:null,\n    claimText:null,\n    unlockDate:null,\n    inputValue:null,\n    balanceProp:null,\n    tokenConfig:null,\n    noFundsText:null,\n    gaugeConfig:null,\n    contractInfo:null,\n    lastUserVote:null,\n    selectedToken:null,\n    rewardsTokens:null,\n    veTokenBalance:null,\n    approveEnabled:null,\n    claimSucceded:false,\n    claimToken:'default',\n    buttonDisabled:false,\n    availableGauges:null,\n    claimableTokens:null,\n    votingPowerUsed:null,\n    availableTokens:null,\n    stakeAction:'deposit',\n    selectedAction:'vote',\n    gaugeTotalSupply:null,\n    distributionRate:null,\n    gaugeWorkingSupply:null,\n    veTokenTotalSupply:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    trancheTokenBalance:null,\n    availableVotingPower:null,\n    gaugePeriodTimestamp:null,\n    gaugeWorkingBalances:null,\n    claimableRewardsTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.setState({\n        infoBox:null,\n        gaugeConfig:null,\n        claimSucceded:false\n      },() => {\n        this.loadGaugeData();\n      })\n    }\n\n    const stakeActionChanged = prevState.stakeAction !== this.state.stakeAction;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChanged || stakeActionChanged){\n      this.setState({\n        infoBox:null,\n        claimSucceded:false\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableGauges).reduce((obj, token) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[token];\n      const baseTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n\n      const tokenConfig = {};\n      tokenConfig.token = token;\n      tokenConfig.abi = gaugeConfig.abi;\n      tokenConfig.address = gaugeConfig.address;\n      tokenConfig.decimals = baseTokenConfig.decimals;\n      obj[token] = tokenConfig;\n      return obj;\n    }, {});\n\n    const selectedToken = this.props.urlParams.param2 && Object.keys(availableTokens).includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : Object.keys(availableTokens)[0];\n\n    this.setState({\n      selectedToken,\n      availableTokens\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  calculateGaugeBoost(stakedBalance=null) {\n\n    if (this.functionsUtil.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.functionsUtil.BNify(0);\n    }\n\n    stakedBalance = this.functionsUtil.BNify(stakedBalance).plus(this.state.stakedBalance);\n\n    let l = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18));\n    let voting_total = this.functionsUtil.BNify(this.state.veTokenTotalSupply);\n    // let period_timestamp = this.functionsUtil.BNify(this.state.gaugePeriodTimestamp);\n    let working_balances = this.functionsUtil.BNify(this.state.gaugeWorkingBalances);\n    let working_supply = this.functionsUtil.BNify(this.state.gaugeWorkingSupply);\n    let L = this.functionsUtil.BNify(this.state.gaugeTotalSupply).plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.functionsUtil.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.functionsUtil.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = Math.min(l, lim);\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    let boost = this.functionsUtil.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    if (!boost || boost.isNaN()){\n      boost = this.functionsUtil.BNify(1);\n    }\n\n    // console.log('calculateGaugeBoost',voting_balance.toFixed(),voting_total.toFixed(),l.toFixed(),L.toFixed(),lim.toFixed(),_working_supply.toFixed(),noboost_lim.toFixed(),noboost_supply.toFixed(),boost.toFixed());\n\n    return boost;\n  }\n\n  async loadGaugeData(){\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n\n    // Initialize veToken\n    const veTokenContract = this.functionsUtil.getContractByName(veTokenConfig.token);\n    if (!veTokenContract && veTokenConfig.abi){\n      await this.props.initContract(veTokenConfig.token,veTokenConfig.address,veTokenConfig.abi);\n    }\n\n    // Initialize tranche token\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n    const trancheTokenContract = this.functionsUtil.getContractByName(trancheTokenConfig.name);\n    if (!trancheTokenContract && trancheTokenConfig.abi){\n      await this.props.initContract(trancheTokenConfig.token,trancheTokenConfig.address,trancheTokenConfig.abi);\n    }\n\n    // Initialize Liquidity Gauge contract\n    const liquidityGaugeConfig = this.functionsUtil.getContractByName(gaugeConfig.name);\n    if (!liquidityGaugeConfig && gaugeConfig.abi){\n      await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n    }\n\n    let [\n      blockInfo,\n      gaugeTotalSupply,\n      veTokenTotalSupply,\n      distributionRate,\n      stakedBalance,\n      rewardsTokens,\n      gaugeWorkingSupply,\n      veTokenBalance,\n      gaugePeriodTimestamp,\n      trancheTokenBalance,\n      votingPowerUsed,\n      gaugeWorkingBalances,\n      lastUserVote\n    ] = await Promise.all([\n      this.functionsUtil.getBlockInfo(),\n      this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n      this.functionsUtil.getTokenTotalSupply(veTokenConfig.token),\n      this.functionsUtil.genericContractCall('GaugeDistributor','rate'),\n      this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n      this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n      this.functionsUtil.getTokenBalance(veTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'period_timestamp',[0]),\n      this.functionsUtil.getTokenBalance(trancheTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_power',[this.props.account]),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n      this.functionsUtil.genericContractCall('GaugeController','last_user_vote',[this.props.account,gaugeConfig.address])\n    ]);\n\n    // console.log('distributionRate',distributionRate);\n\n    const claimableRewardsTokens = Object.keys(rewardsTokens).filter( token => token !== 'IDLE' ).reduce( (claimableRewards,token) => {\n      const tokenConfig = rewardsTokens[token];\n      if (tokenConfig.balance.gt(0)){\n        claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n      }\n      return claimableRewards;\n    },{});\n\n    const claimableTokens = this.functionsUtil.fixTokenDecimals(rewardsTokens.IDLE.balance,18);\n\n    if (distributionRate){\n      distributionRate = this.functionsUtil.fixTokenDecimals(distributionRate,18).times(86400);\n    }\n\n    votingPowerUsed = this.functionsUtil.BNify(votingPowerUsed).div(10000);\n\n    this.setState({\n      blockInfo,\n      gaugeConfig,\n      lastUserVote,\n      rewardsTokens,\n      stakedBalance,\n      veTokenBalance,\n      votingPowerUsed,\n      claimableTokens,\n      gaugeTotalSupply,\n      distributionRate,\n      gaugeWorkingSupply,\n      veTokenTotalSupply,\n      trancheTokenBalance,\n      gaugeWorkingBalances,\n      gaugePeriodTimestamp,\n      claimableRewardsTokens\n    },() => {\n      this.loadTokenData(true);\n    });\n  }\n\n  async loadTokenData(loadGauges=false){\n\n    if (!this.state.gaugeConfig){\n      this.loadGaugeData();\n    }\n\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n\n    let canVote = true;\n    let unlockDate = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let noFundsText = null;\n    let contractInfo = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n    let balanceSelectorInfo = null;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        approveEnabled = false;\n        tokenConfig = veTokenConfig;\n        const veTokenBalanceUsed = this.state.veTokenBalance.times(this.state.votingPowerUsed);\n        balanceProp = this.state.veTokenBalance.minus(veTokenBalanceUsed);\n        balanceSelectorInfo = {\n          color:`copyColor`,\n          text:`Allocated power: ${this.state.votingPowerUsed.times(100).toFixed(2)}%`\n        };\n        contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeController']);\n        noFundsText = `Stake your ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} tokens to allocate your voting power to a Gauge.`;\n\n        const nextUnlockTime = this.state.lastUserVote ? parseInt(this.state.lastUserVote)+this.props.toolProps.WEIGHT_VOTE_DELAY : null;\n        canVote = !nextUnlockTime || this.state.blockInfo.timestamp>=nextUnlockTime;\n\n        unlockDate = nextUnlockTime ? this.functionsUtil.strToMoment(nextUnlockTime*1000).utc().format('YYYY-MM-DD HH:mm') : null;\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            approveEnabled = true;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.trancheTokenBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in your wallet to deposit.`;\n            approveDescription = `Approve the Gauge contract to deposit your <strong>${trancheTokenConfig.token}</strong> tokens`;\n\n            const boost = this.calculateGaugeBoost(0);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          case 'claim':\n            approveEnabled = false;\n            contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeDistributor']);\n          break;\n          case 'withdraw':\n            approveEnabled = false;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.stakedBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in the Gauge contract to withdraw.`;\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      canVote,\n      unlockDate,\n      noFundsText,\n      tokenConfig,\n      gaugeConfig,\n      balanceProp,\n      contractInfo,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    },() => {\n      if (loadGauges || !this.state.availableGauges){\n        this.loadGauges();\n      }\n    });\n  }\n\n  async loadGauges(){\n\n    const availableGauges = {};\n    const veTokenConfig = this.props.toolProps.veToken;\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableGauges), async (gaugeToken) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (trancheConfig){\n\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n\n        let [\n          gaugeTotalSupply,\n          rewardsTokens,\n          stakedBalance,\n          gaugeWeight,\n        ] = await Promise.all([\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n          this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account,false),\n          this.functionsUtil.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address])\n        ]);\n\n        // const gaugeBoost = await this.functionsUtil.calculateGaugeBoost(gaugeConfig.name,stakedBalance,this.props.account);\n        // console.log(gaugeConfig.name,gaugeBoost.toFixed());\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          if (tokenConfig.balance.gt(0)){\n            claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          }\n          return claimableRewards;\n        },{});\n\n        const gaugeUserShare = stakedBalance.div(gaugeTotalSupply);\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = this.state.distributionRate.times(gaugeWeight);\n\n        const veTokenShare = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18)).div(this.state.veTokenTotalSupply);\n        const userBaseDistribution = gaugeDistributionRate.times(gaugeUserShare);\n\n        const boostMultiplier = veTokenShare.times(1.5).plus(1);\n        let userBoostedDistribution = boostMultiplier.times(userBaseDistribution);\n        if (userBoostedDistribution.gt(gaugeDistributionRate)){\n          userBoostedDistribution = gaugeDistributionRate;\n        }\n        // console.log(gaugeConfig.name,'veTokenShare',veTokenShare.toFixed(8),'gaugeUserShare',gaugeUserShare.toFixed(8),'userBaseDistribution',userBaseDistribution.toFixed(8),'userBoostedDistribution',userBoostedDistribution.toFixed(8),'gaugeDistributionRate',gaugeDistributionRate.toFixed(8));\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          const tokenBalance = claimableRewardsTokens[token];\n          let text = `${tokenBalance.toFixed(4)} ${token}`;\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            text += ` (~${userBoostedDistribution.toFixed(4)}/day)`;\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = `${gaugeDistributionRate.toFixed(4)} IDLE/day`;\n        availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = this.functionsUtil.fixTokenDecimals(stakedBalance,18);\n      }\n    });\n\n    this.setState({\n      availableGauges\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setClaimToken(claimToken){\n    if (claimToken !== this.state.claimToken){\n      this.setState({\n        claimToken,\n        claimSucceded:null\n      });\n    }\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      const infoBox = null;\n      const inputValue = null;\n      this.setState({\n        infoBox,\n        inputValue,\n        selectedAction\n      });\n    }\n  }\n\n  setStakeAction(stakeAction){\n    if (stakeAction !== this.state.stakeAction){\n      this.setState({\n        stakeAction\n      });\n    }\n  }\n\n  async transactionSucceeded(tx,amount,params){\n\n    let infoBox = null;\n    let claimText = null;\n    let claimSucceded = false;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        const votingWeight = this.functionsUtil.BNify(params.methodParams[1]).div(100).toFixed(2);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully allocated <strong>${votingWeight}%</strong> of your voting power to this Gauge`\n        };\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const depositedAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully deposited <strong>${depositedAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> in the Gauge.`\n            };\n          break;\n          case 'claim':\n            claimSucceded = true;\n            switch (this.state.claimToken){\n              case 'additional':\n                claimText = `You have successfully claimed your additional rewards.`;\n              break;\n              default:\n              case 'default':\n                claimText = `You have successfully claimed <strong>${this.state.claimableTokens.toFixed(8)} IDLE</strong>.`;\n              break;\n            }\n          break;\n          case 'withdraw':\n            const withdrawnAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully withdrawn <strong>${withdrawnAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> from the Gauge.`\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      claimText,\n      claimSucceded\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    let infoBox = null;\n    let votingWeight = null;\n    let balanceSelectorInfo = null;\n\n    inputValue = this.functionsUtil.BNify(inputValue);\n    switch (this.state.selectedAction){\n      case 'vote':\n        if (inputValue.gt(0)){\n          const votingPowerPercentage = this.state.veTokenBalance.gt(0) ? inputValue.div(this.state.veTokenBalance).times(100).toFixed(2) : this.functionsUtil.BNify(0);\n          votingWeight = this.state.veTokenBalance.gt(0) ? this.functionsUtil.integerValue(inputValue.div(this.state.veTokenBalance).times(10000)) : this.functionsUtil.BNify(0);\n          infoBox = {\n            icon:'Info',\n            text:`You are allocating <strong>${votingPowerPercentage}%</strong> of your voting power to this Gauge`\n          };\n        }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const boost = this.calculateGaugeBoost(inputValue);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      inputValue,\n      votingWeight,\n      balanceSelectorInfo\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const gaugeAddress = this.props.toolProps.availableGauges[this.state.selectedToken].address;\n    switch (this.state.selectedAction){\n      case 'vote':\n        methodName = 'vote_for_gauge_weights';\n        methodParams = [gaugeAddress,this.state.votingWeight];\n      break;\n      case 'stake':\n        const amount = this.functionsUtil.normalizeTokenAmount(this.state.inputValue,18);\n        switch (this.state.stakeAction){\n          case 'deposit':\n            methodName = 'deposit';\n            methodParams = [amount];\n          break;\n          case 'withdraw':\n            methodName = 'withdraw';\n            methodParams = [amount];\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select Gauge:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              onChange={this.selectToken.bind(this)}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.state.availableTokens}\n            />\n          </Box>\n          {\n            !this.state.gaugeConfig ? (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection: 'row'\n                }}\n                loaderProps={{\n                  size: '30px'\n                }}\n                textProps={{\n                  ml: 2\n                }}\n                text={'Loading Gauge info...'}\n              />\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={1}\n                  mb={2}\n                  width={1}\n                >\n                  <Text\n                    mb={1}\n                  >\n                    Choose action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Vote'}\n                      iconColor={'redeem'}\n                      iconBgColor={'#3f5fff'}\n                      image={'images/vote.svg'}\n                      isActive={ this.state.selectedAction === 'vote' }\n                      handleClick={ e => this.setSelectedAction('vote') }\n                    />\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Stake'}\n                      icon={'Layers'}\n                      iconColor={'deposit'}\n                      iconBgColor={'#ced6ff'}\n                      isActive={ this.state.selectedAction === 'stake' }\n                      handleClick={ e => this.setSelectedAction('stake') }\n                    />\n                  </Flex>\n                </Box>\n                {\n                  this.state.selectedAction === 'stake' && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose stake action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Deposit'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.stakeAction === 'deposit' }\n                          handleClick={ e => this.setStakeAction('deposit') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Claim'}\n                          iconColor={'#dd0000'}\n                          icon={'CardGiftcard'}\n                          iconBgColor={'#ffd979'}\n                          isActive={ this.state.stakeAction === 'claim' }\n                          handleClick={ e => this.setStakeAction('claim') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Withdraw'}\n                          icon={'ArrowUpward'}\n                          iconColor={'redeem'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.stakeAction === 'withdraw' }\n                          handleClick={ e => this.setStakeAction('withdraw') }\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'stake' && this.state.stakeAction === 'claim' && this.state.rewardsTokens && Object.keys(this.state.rewardsTokens).length>1 && (\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose claim method:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          text={'Claim IDLE'}\n                          image={'images/tokens/IDLE.svg'}\n                          isActive={ this.state.claimToken === 'default' }\n                          handleClick={ e => this.setClaimToken('default') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          handleClick={ e => this.setClaimToken('additional') }\n                          isActive={ this.state.claimToken === 'additional' }\n                          text={`Claim ${Object.keys(this.state.rewardsTokens).splice(1).join(', ')}`}\n                          image={this.functionsUtil.getTokenIcon(Object.keys(this.state.rewardsTokens)[1])}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'vote' && !this.state.canVote ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'AccessTime'}\n                      text={`Please wait until <strong>${this.state.unlockDate} UTC</strong> to allocate your voting power to this Gauge.`}\n                    />\n                  ) : (this.state.selectedAction === 'vote' || this.state.stakeAction !== 'claim') && this.state.tokenConfig ? (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      permitEnabled={false}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.state.selectedAction === 'vote' ? 'Vote' : this.functionsUtil.capitalize(this.state.stakeAction)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.1em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                            dangerouslySetInnerHTML={{\n                              __html:this.state.noFundsText\n                            }}\n                          />\n                          {\n                            this.state.selectedAction === 'vote' && (\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,1/2]\n                                }}\n                                handleClick={e => this.props.goToSection(`tools/${this.functionsUtil.getGlobalConfig(['tools','stake','route'])}`)}\n                              >\n                                Stake\n                              </RoundButton>\n                            )\n                          }\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  ) : this.state.stakeAction === 'claim' &&\n                    this.state.claimSucceded ? (\n                      <IconBox\n                        cardProps={{\n                          mt:2\n                        }}\n                        icon={'DoneAll'}\n                        text={this.state.claimText}\n                        iconProps={{\n                          size:this.props.isMobile ? '1.8em' : '2.1em',\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                      />\n                    ) : this.state.claimToken === 'default' ?\n                      (this.state.claimableTokens && this.state.claimableTokens.gt(0)) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimableTokens.toFixed(8)} IDLE</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'distribute'}\n                                contractName={'GaugeDistributorProxy'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                getTransactionParams={ e => [this.props.toolProps.availableGauges[this.state.selectedToken].address] }\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any IDLE to claim for this Gauge.`}\n                        />\n                      )\n                    : this.state.claimToken === 'additional' &&\n                      (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {Object.keys(this.state.claimableRewardsTokens).map( token => (<strong>{this.state.claimableRewardsTokens[token].toFixed(8)} {token}</strong>) )}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'claim_rewards'}\n                                contractName={this.state.gaugeConfig.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any additional reward to claim for this Gauge.`}\n                        />\n                      )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Heading.h4\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Gauges Weights\n                </Heading.h4>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.14]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.14],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'GAUGE WEIGHT',\n                    props:{\n                      width:[0.25,0.11],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.10],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          decimals:2,\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'SENIOR APY',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                    props:{\n                      width:[0.27,0.14],\n                    },\n                    parentProps:{\n                      flexDirection:'column',\n                      alignItems:'flex-start',\n                    },\n                    fields:[\n                      {\n                        name:'seniorApy',\n                        showTooltip:true\n                      },\n                    ],\n                  },\n                  */\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      width:[0.27,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        path:['tokenConfig','stakedBalance'],\n                        props:{\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          minPrecision:1,\n                          decimals:this.props.isMobile ? 0 : 2,\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:this.props.isMobile ? 'REWARDS' : 'REWARDS TOKENS',\n                    props:{\n                      width:[0.23, 0.12],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        path:['tokenConfig','distributionRate'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      width:[0.25,0.16],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Gauges;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    lastHarvest:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      lastHarvest,\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice,\n      trancheBaseApy\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTrancheLastHarvest(this.props.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('tranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    // console.log('stakingRewards',stakingRewards,stakingEnabled,unstakeEnabled);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      lastHarvest,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const gaugeConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges',this.props.selectedToken]);\n    let infoText = this.functionsUtil.getArrayPath(['messages',this.state.selectedAction],this.props.tokenConfig) || trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n        \n        if (gaugeConfig && gaugeConfig.trancheToken.token.toLowerCase() === this.props.tokenConfig[this.props.selectedTranche].token.toLowerCase() && this.state.trancheBalance.gt(0)){\n          infoText = `Stake your ${gaugeConfig.trancheToken.token} in the Liquidity Gauge and get rewarded!`;\n        }\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,this.functionsUtil.BNify(this.state.trancheBalance).toFixed(),selectedPercentage,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  {\n                    this.props.tokenConfig.description && (\n                      <Flex\n                        pt={2}\n                        mb={2}\n                        width={1}\n                        flexDirection={'column'}\n                        borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                          fontWeight={[2,3]}\n                        >\n                          Strategy Description\n                        </Text>\n                        <Flex\n                          mt={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={'15px'}\n                            textAlign={'justify'}\n                          >\n                            {this.props.tokenConfig.description}\n                          </Text>\n                        </Flex>\n                        {\n                          this.state.lastHarvest && (\n                            <Flex\n                              pt={2}\n                              mt={2}\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest date:\n                                </Text>\n                                <ExtLink\n                                  href={this.functionsUtil.getEtherscanTransactionUrl(this.state.lastHarvest.transactionHash)}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={'15px'}\n                                    >\n                                      {this.functionsUtil.strToMoment(this.state.lastHarvest.timestamp*1000).utc().format(\"MMM DD YYYY HH:mm\")} UTC\n                                    </Text>\n                                    <Icon\n                                      ml={1}\n                                      size={'1.1em'}\n                                      name={'OpenInNew'}\n                                      color={'copyColor'}\n                                    />\n                                  </Flex>\n                                </ExtLink>\n                              </Flex>\n                              <Flex\n                                mt={1}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest amount:\n                                </Text>\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                >\n                                  {this.functionsUtil.fixTokenDecimals(this.state.lastHarvest.amount,this.props.tokenConfig.decimals).toFixed(8)} {this.props.tokenConfig.token}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    )\n                  }\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.messages && this.props.tokenConfig.messages.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.messages.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTokenTx.timeStamp);\n\n        const trancheInfos = trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n\n        const conversionRatesTimestamps = {};\n        if (conversionRateField){\n          const blocksTimestamps = {};\n          const conversionRateBlocksCalls = {};\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n              const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n              if (blockInfo.distance === null || distance<blockInfo.distance){\n                blockInfo.distance = distance;\n                blockInfo.trancheInfo = trancheInfo;\n              }\n              return blockInfo;\n            },{\n              distance:null,\n              trancheInfo:null\n            });\n\n            if (blockInfo && blockInfo.trancheInfo){\n              if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n              }\n              blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n              conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,blockInfo.trancheInfo.blockNumber);\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            // }\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n    }\n    \n    const tokenConfig = this.props.availableTranches[protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for {this.state.token}\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      \n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n      \n      Object.keys(this.props.availableTranches).forEach(protocol => {\n        Object.keys(this.props.availableTranches[protocol]).forEach( tranche=> {\n          if(depositedTokens.includes(tranche)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={};\n              }\n              depositedTranches[protocol][tranche]={}\n              depositedTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={};\n            }\n            remainingTranches[protocol][tranche]={};\n            remainingTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n        })\n      })\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4]\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - remainingTranches',remainingTranches);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Deposited Tranches\n                      </Heading.h4>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      colsProps={{\n                        fontSize:['10px','14px'],\n                      }}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              mobile:false,\n                              name:'experimentalBadge',\n                              props:{\n                                ml:1,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'APR RATIO',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                          props:{\n                            width:[0.15, 0.1],\n                          },\n                          fields:[\n                            {\n                              name:'trancheAPRSplitRatio',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                height:['1.4em','2em']\n                              }\n                            },\n                            \n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.15],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                fontWeight:3,\n                                height:'45px',\n                                borderRadius:4,\n                                boxShadow:null,\n                                mainColor:'redeem',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Heading.h4\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Heading.h4>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'experimentalBadge',\n                            props:{\n                              ml:1,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'APR RATIO',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                        props:{\n                          width:[0.15, 0.1],\n                        },\n                        fields:[\n                          {\n                            name:'trancheAPRSplitRatio',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              height:['1.4em','2em']\n                            }\n                          },\n                          \n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'deposit',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    availableTranches={this.props.account?this.state.remainingTranches:this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport { Text, Flex, Button, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStakingDisapprove extends Component {\n\n  state = {\n    disapproveAllowance:false,\n    transactionSucceeded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n\n    await Promise.all([\n      this.props.initContract(stkIdleConfig.name,stkIdleConfig.address,stkIdleConfig.abi)\n    ]);\n\n    let [\n      stkIdleBalance,\n      idleBalance,\n      idleAllowance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(stkIdleConfig.name,this.props.account),\n      this.functionsUtil.getTokenBalance(governanceTokenName,this.props.account),\n      this.functionsUtil.getAllowance(governanceTokenName,stkIdleConfig.address,this.props.account),\n    ]);\n\n    idleBalance = this.functionsUtil.BNify(idleBalance);\n    stkIdleBalance = this.functionsUtil.BNify(stkIdleBalance);\n    const disapproveAllowance = idleBalance.gt(0) && this.functionsUtil.BNify(idleAllowance).gt(idleBalance) && stkIdleBalance.gt(0);\n\n    return this.setState({\n      disapproveAllowance\n    });\n  }\n\n  async transactionSucceeded(tx){\n    this.setState({\n      transactionSucceeded:true\n    });\n  }\n\n  render() {\n    const viewOnly = this.props.connectorName === 'custom';\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n    return !viewOnly && (this.state.disapproveAllowance || this.state.transactionSucceeded) ? (\n      <Flex\n        p={2}\n        my={2}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            this.state.transactionSucceeded ? (\n              <Icon\n                size={'1.8em'}\n                name={'DoneAll'}\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n            ) : (\n              <Icon\n                size={'1.8em'}\n                name={'Warning'}\n                color={'#f6851a'}\n              />\n            )\n          }\n          <Text\n            mb={1}\n            fontWeight={500}\n            fontSize={'15px'}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            {\n              this.state.transactionSucceeded ?\n                'You have succesfully reduced the allowance for the staking contract.'\n              :\n                'You approved the staking contract to spend an amount of IDLE greater then your IDLE balance. It\\'s advised to reduce the allowance for security reasons.'\n            }\n          </Text>\n          {\n            !this.state.transactionSucceeded && (\n              <ExecuteTransaction\n                {...this.props}\n                Component={Button}\n                parentProps={{\n                  width:1,\n                  alignItems:'center',\n                  justifyContent:'center'\n                }}\n                componentProps={{\n                  fontWeight:3,\n                  size:'small',\n                  width:'auto',\n                  style:{\n                    fontSize:'14px',\n                  },\n                  mainColor:'blue',\n                  value:'Reduce allowance',\n                }}\n                contractName={'IDLE'}\n                methodName={'approve'}\n                action={'Reduce allowance'}\n                callback={this.transactionSucceeded.bind(this)}\n                params={[stkIdleConfig.address,this.props.web3.utils.toTwosComplement('0')]}\n              />\n            )\n          }\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default IdleStakingDisapprove;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport IdleStakingDisapprove from \"../IdleStakingDisapprove/IdleStakingDisapprove\";\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    approveMaxAllowance:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveEnabled = this.state.increaseAction === 'amount';\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.isDashboard && (\n          <IdleStakingDisapprove\n            {...this.props}\n          />\n        )\n      }\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        approveMaxAllowance={this.state.approveMaxAllowance}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const maticPOSClientChanged = prevProps.maticPOSClient !== this.props.maticPOSClient;\n    if (accountChanged || maticPOSClientChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account || !this.props.maticPOSClient){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport { Button, Flex, Box, Text, Icon } from \"rimble-ui\";\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    selectedTransaction:null,\n    transactionSucceeded:null,\n    selectedTransactionHash:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransactionHash;\n\n    const logEventSignature = this.props.toolProps.genericParams.erc20LogEventSignature;\n    const exitCalldata = await this.props.maticPOSClient.exitUtil.buildPayloadForExit(txHash,logEventSignature,false);\n    \n    if (exitCalldata){\n      return [exitCalldata];\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransactionHash){\n    const selectedTransaction = this.state.polygonTxs.find( tx => tx.hash.toLowerCase() === selectedTransactionHash.toLowerCase() );\n    this.setState({\n      selectedTransaction,\n      selectedTransactionHash\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol.toUpperCase() === this.state.selectedToken.toUpperCase() ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data : null;\n        newState.selectedTransactionHash = newState.selectedTransaction ? newState.selectedTransaction.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && \n                                                !this.state.selectedTransaction.included ? (\n                                                  <IconBox\n                                                    cardProps={{\n                                                      mt:3,\n                                                      width:1\n                                                    }}\n                                                    icon={'AccessTime'}\n                                                    text={'This transaction has not been included in the checkpoint yet.<br />Please wait up to 2-3 hours to be able to complete the withdrawal.'}\n                                                  />\n                                                ) : (\n                                                  <ExecuteTransaction\n                                                    action={'Exit'}\n                                                    Component={Button}\n                                                    parentProps={{\n                                                      mt:3,\n                                                      alignItems:'center',\n                                                      justifyContent:'center'\n                                                    }}\n                                                    componentProps={{\n                                                      fontWeight:3,\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      height:'45px',\n                                                      fontSize:[2,3],\n                                                      boxShadow:null,\n                                                      borderRadius:4,\n                                                      mainColor:'redeem',\n                                                      value:'Exit Transaction',\n                                                    }}\n                                                    params={[]}\n                                                    methodName={'exit'}\n                                                    sendRawTransaction={true}\n                                                    contractName={'RootChainManager'}\n                                                    callback={this.exitCallback.bind(this)}\n                                                    getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                    {...this.props}\n                                                  >\n                                                    <Flex\n                                                      flexDirection={'row'}\n                                                      alignItems={'center'}\n                                                      justifyContent={'center'}\n                                                    >\n                                                      <Icon\n                                                        mr={1}\n                                                        name={'Done'}\n                                                        size={'1.4em'}\n                                                        color={this.props.theme.colors.transactions.status.completed}\n                                                      />\n                                                      <Text\n                                                        fontWeight={500}\n                                                        fontSize={'15px'}\n                                                        color={'copyColor'}\n                                                        textAlign={'center'}\n                                                      >\n                                                        Transaction successfully exited!\n                                                      </Text>\n                                                    </Flex>\n                                                  </ExecuteTransaction>\n                                                )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <IconBox\n                                            cardProps={{\n                                              mt:3,\n                                              width:1\n                                            }}\n                                            icon={'Warning'}\n                                            text={'You cannot exit any transaction yet.'}\n                                          />\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Gauges from \"../Gauges/Gauges\";\nimport Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport MultiRewards from '../contracts/MultiRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport LiquidityGauge from '../contracts/LiquidityGauge.json';\nimport GaugeController from '../contracts/GaugeController.json';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport GaugeDistributor from '../contracts/GaugeDistributor.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport GaugeDistributorProxy from '../contracts/GaugeDistributorProxy.json';\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.5\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    gaugeBoost: \"Increase the boost by staking your IDLE tokens and increasing your voting power\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    stakingRewards:\"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens using the staking function\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      },\n      GaugeController:{\n        abi:GaugeController,\n        address:'0xaC69078141f76A1e257Ee889920d02Cc547d632f'\n      },\n      GaugeDistributor:{\n        abi:GaugeDistributor,\n        address:'0x1276A8ee84900bD8CcA6e9b3ccB99FF4771Fe329'\n      },\n      GaugeDistributorProxy:{\n        abi:GaugeDistributorProxy,\n        address:'0x074306BC6a6Fc1bD02B425dd41D742ADf36Ca9C6'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    gauges: {\n      icon: \"images/sidebar/gauges-on.svg\",\n      iconDark: \"images/sidebar/gauges-on-dark.svg\",\n      iconInactive: \"images/sidebar/gauges-off.svg\",\n      iconInactiveDark: \"images/sidebar/gauges-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      timeout:15000,\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        decimals: 18,\n        enabled: true,\n        label: 'CVX',\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'CRV',\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        icon: \"images/tokens/mUSD.svg\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    gauges: {\n      enabled: true,\n      label: \"Gauges\",\n      route: \"gauges\",\n      subComponent: Gauges,\n      availableNetworks: [1],\n      image: 'images/vote.svg',\n      imageInactive: 'images/vote-inactive.svg',\n      desc: \"Allocate your voting power into your preferred Gauge and earn rewards\",\n      props: {\n        WEIGHT_VOTE_DELAY:864000,\n        veToken:{\n          abi: stkIDLE,\n          decimals: 18,\n          token: \"stkIDLE\",\n          rewardToken: \"IDLE\",\n          address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n        },\n        contracts:{\n          MultiRewards:{\n            maxRewards:3,\n            abi:MultiRewards\n          }\n        },\n        availableGauges:{\n          ALUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_convex_alusd3crv\",\n            token: \"LiquidityGauge_aa_convex_alusd3crv\",\n            address:'0x21dDA17dFF89eF635964cd3910d167d562112f57',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_alusd3crv',\n              token: 'AA_convex_alusd3crv',\n              address: '0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n            }\n          },\n          stETH:{\n            protocol:'lido',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_lido_steth\",\n            token: \"LiquidityGauge_aa_lido_steth\",\n            address:'0x675eC042325535F6e176638Dd2d4994F645502B9',\n            multiRewards:{\n              rewardTokens:['LDO'],\n              name:'multiRewards_aa_lido_stETH',\n              address:'0xA357AF9430e4504419A7A05e217D4A490Ecec6FA',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_lido_stETH',\n              token: 'AA_lido_stETH',\n              address: '0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n            }\n          },\n          FRAX3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_convex_frax3crv\",\n            token: \"LiquidityGauge_aa_convex_frax3crv\",\n            address:'0x7ca919Cf060D95B3A51178d9B1BCb1F324c8b693',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_frax3crv',\n              token: 'AA_convex_frax3crv',\n              address: '0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n            }\n          },\n          MIM3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_convex_mim3crv\",\n            token: \"LiquidityGauge_aa_convex_mim3crv\",\n            address:'0x8cC001dd6C9f8370dB99c1e098e13215377Ecb95',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_mim3crv',\n              token: 'AA_convex_mim3crv',\n              address: '0xFC96989b3Df087C96C806318436B16e44c697102'\n            }\n          },\n          \"3EUR\":{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_convex_3eur\",\n            token: \"LiquidityGauge_aa_convex_3eur\",\n            address:'0xDfB27F2fd160166dbeb57AEB022B9EB85EA4611C',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_3eur',\n              token: 'AA_convex_3eur',\n              address: '0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n            }\n          },\n          steCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_convex_steCRV\",\n            token: \"LiquidityGauge_aa_convex_steCRV\",\n            address:'0x30a047d720f735Ad27ad384Ec77C36A4084dF63E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_steCRV',\n              token: 'AA_convex_steCRV',\n              address: '0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n            }\n          },\n          MUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_convex_musd3crv\",\n            token: \"LiquidityGauge_aa_convex_musd3crv\",\n            address:'0xAbd5e3888ffB552946Fc61cF4C816A73feAee42E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_musd3crv',\n              token: 'AA_convex_musd3crv',\n              address: '0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n            }\n          },\n          mUSD:{\n            protocol:'mstable',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_mstable_musd\",\n            token: \"LiquidityGauge_aa_mstable_musd\",\n            address:'0x41653c7AF834F895Db778B1A31EF4F68Be48c37c',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_mstable_musd',\n              token: 'AA_mstable_musd',\n              address: '0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n            }\n          },\n        }\n      }\n    },\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      label: 'Ethereum ⇔ Polygon Bridge',\n      image: 'images/protocols/polygon.svg',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        genericParams:{\n          erc20LogEventSignature: \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken:{\n              name:'ETH',\n              address:'0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport { POSClient, use } from '@maticnetwork/maticjs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3';\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  maticPOSClient: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded');\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    const accountChanged = prevState.account !== this.state.account;\n    if (accountChanged){\n      this.initMaticPosClient();\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initMaticPosClient = async () => {\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const networkId = this.state.network.required.id;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n      // install web3 plugin\n      use(Web3ClientPlugin);\n\n      maticPOSClient = new POSClient();\n\n      const maticPOSClientConfig = {\n        parent: {\n          provider: parentProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        child: {\n          provider: maticProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n\n      await maticPOSClient.init(maticPOSClientConfig);\n    }\n\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    this.setState({\n      maticPOSClient,\n      maticPlasmaClient\n    });\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    let web3Polygon = null;\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    const polygonConfig = globalConfigs.network.providers.polygon;\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      window.web3Polygon = web3Polygon;\n    }\n\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    const web3Callback = async (initWeb3Index) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',this.state.network,this.state.biconomy,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n        if (!this.state.network.isCorrectNetwork && isGnosisSafe){\n          await this.checkNetwork();\n        }\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const currentNetworkId = this.state.network.current.id;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('check biconomy enabled',this.state.network,currentNetworkId,biconomyInfo.supportedNetworks.includes(currentNetworkId));\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(currentNetworkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     // console.log('getCurrentNetwork',this.state.web3,currentWeb3);\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', correct: '+network.isCorrectNetwork,', update: '+updateNetwork);\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient: null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(availableTranches && Object.keys(availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.availableTokens = availableTranches;\n            newState.selectedProtocol = selectedProtocol;\n            newState.tokenConfig = availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n    console.log(\"availabble\",this.state.availableStrategies)\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        maticPOSClient,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        maticPOSClient={maticPOSClient}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n    const depositedTokens=this.props.depositedTokens;\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n       {\n         this.props.isDeposit?\n       (\n         depositedTokens &&\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            depositedTokens.map( token => {\n              const tokenConfig = this.props.availableTranches[token.protocol][token.token];\n              return (\n                <TableRow\n                  {...this.props}\n                  token={token.token}\n                  addTokenName={false}\n                  tranche={token.tranche}\n                  protocol={token.protocol}\n                  tokenConfig={tokenConfig}\n                  rowId={`tranche-col-${token.protocol}`}\n                  cardId={`tranche-card-${token.protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                  key={`tranche-${token.protocol}-${token.token+token.tranche}`}\n                  trancheConfig={token.tranche===\"AA\"?tokenConfig.AA:tokenConfig.BB}\n                />\n              )\n            })\n          }\n        </Flex>\n       ):\n       (\n         <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => {\n                return(\n                  <TableRow\n                    {...this.props}\n                    token={token}\n                    tranche={tranche}\n                    protocol={protocol}\n                    rowId={`tranche-col-${protocol}`}\n                    tokenConfig={protocolConfig[token]}\n                    cardId={`tranche-card-${protocol}`}\n                    key={`tranche-${protocol}-${token}`}\n                    fieldComponent={this.props.fieldComponent || TrancheField}\n                  />\n                  )\n               })\n            })\n          }\n        </Flex>\n        )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let output = null;\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      case 'html':\n        output = (<Text {...fieldProps} dangerouslySetInnerHTML={{\n          __html: customValue\n        }} />);\n      break;\n      case 'tokensList':\n        output = customValue && Object.keys(customValue).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(customValue).map( (token,tokenIndex) => {\n                const tokenConfig = customValue[token];\n                return (\n                  <AssetField\n                    token={token}\n                    tokenConfig={tokenConfig}\n                    key={`asset_${tokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${token}`\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:tokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(customValue).length-tokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : null;\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : output;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}