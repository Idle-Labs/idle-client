{"version":3,"sources":["SmartNumber/SmartNumber.js","RoundButton/RoundButton.js","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","CardIconButton/CardIconButton.js","Title/Title.js","TxProgressBar/TxProgressBar.js","GenericSelector/GenericSelector.js","theme.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomList/CustomList.js","ActiveCoverages/ActiveCoverages.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","TrancheField/TrancheField.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","ExecuteTransaction/ExecuteTransaction.js","DashboardCard/DashboardCard.module.scss","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","DashboardCard/DashboardCard.js","utilities/components/BuyModal.js","Staking/Staking.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDetails/TrancheDetails.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","PortfolioEquityTranches/PortfolioEquityTranches.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","utilities/components/ModalCard.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","ConnectBox/ConnectBox.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","FlexLoader/FlexLoader.js","CustomField/CustomField.js","AssetField/AssetField.js","ImageButton/ImageButton.js","ExtLink/ExtLink.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","Component","RoundButton","buttonProps","assign","fontSize","fontWeight","height","boxShadow","borderRadius","mainColor","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","onClick","handleClick","children","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","border","iconSize","iconName","text","ml","color","hoverColor","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","loadData","prevProps","prevState","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","disabled","minWidth","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","name","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","cardProps","py","px","left","data","itemPos","xFormatted","mb","textAlign","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","selectedToken","setStateSafe","newState","callback","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","mr","backgroundColor","textTransform","dangerouslySetInnerHTML","__html","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","themeMode","availableTokens","getEtherscanTxs","account","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","status","Math","min","parseInt","timeStamp","tokenAmount","action","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","CardIconButton","isInteractive","isActive","isDisabled","my","image","align","imageProps","useIconOnly","iconColor","iconProps","iconBgColor","transactions","actionBg","redeem","textProps","Title","lineHeight","HeadingComponent","component","Heading","h1","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","mt","target","rel","href","getEtherscanTransactionUrl","cancelTransaction","cancelTextColor","cancelTextHoverColor","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","innerWidth","open","tweet","contrastColor","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","innerHeight","Header","Body","src_TwitterShareButton_TwitterShareButton","React","CustomList","TableHeader","cols","rows","row","rowIndex","TableRow","fieldComponent","CustomField","rowId","cardId","Base","loaded","activeCoverages","loadCoverages","getActiveCoverages","coverages","c","includes","collateral","statusColors","statusIcon","statusColor","statusIconProps","portfolioCoverage","titleProps","src_CustomList_CustomList","fileClaimUrl","openWindow","fields","mobile","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","bg","radioBtn","button","IconBox","isVisible","TrancheField","ready","loadField","fieldName","fieldInfo","fieldProps","addGovTokens","output","_args","undefined","protocol","t0","loadTrancheField","tranche","trancheConfig","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","tokenChanged","accountChanged","trancheChanged","protocolChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","oldState","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_10__","govTokenConfig","govTokenIndex","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","tooltipProps","message","getGovTokensDistributionSpeed","distributionFrequency","formattedValue","_isBigNumber","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","loaderText","AssetSelector","find","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","gradientButton","empty","select","selectDark","input","TransactionField","hashChanged","bgColor","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","ExecuteTransaction","txStatus","loading","console","log","eventData","methodName","contractName","getTransactionError","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","defaultOpacity","hidden","interactive","rainbow","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","idle","getDistribution","slicedToArray","getUniswapConversionRate","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","availableStrategies","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","disabledTokens","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","env","process","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","networkId","ensConfig","TTL","provider","ens","addressCheck","current","supportedNetworks","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","_ref4","_ref5","trancheTokenBalance","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","tokenBalanceConverted","getIdleTokenPrice","_ref11","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","previousHarvest","latestHarvest","previousBlock","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","transferAmount","tokensPerBlock","tokensPerSecond","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","getBlockInfo","genericContractCallCached","returnValues","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getAmountDepositedTranche","_ref27","_callee19","_context19","_x17","_x18","_x19","_ref28","_callee20","_ref29","_ref30","userAvgPrice","_context20","_x20","_x21","getAmountLent","_callee21","amountLents","_args21","_context21","getEtherscanBaseTxs","_callee22","firstBlockNumber","endBlockNumber","debug","firstIdleBlockNumber","requiredNetwork","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args22","_context22","endpoints","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","makeRequest","now","_callee23","_args23","_context23","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee24","_ref35","allAvailableTokens","_args24","_context24","processStoredTxs","sort","_ref36","_callee25","_args25","_context25","_x22","_ref37","_callee26","processTxs","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args26","_context26","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","objectSpread","iTxs","withdrawnValue","processEtherscanTransactions","_x23","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref38","_callee31","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args31","_context31","baseTokenConfig","baseToken","baseTokenAddress","_ref39","_callee30","minedTxs","_context30","_ref40","_callee29","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context29","getCurveTokenPrice","t1","_ref41","_callee27","_context27","getTransactionReceipt","_x28","_x29","topics","baseTokensConfig","t2","_ref42","_callee28","_context28","_x30","_x31","_x26","_x27","_x25","_x24","_ref43","_callee37","txsToProcess","_args37","_context37","_ref44","_callee36","_context36","_ref45","_callee35","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context35","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref46","_callee32","_context32","txReceipt","_x36","_x37","_ref47","_callee33","_context33","_x38","_x39","oldContract","raw","_ref48","_callee34","_context34","_x40","_x41","abi","decodeLog","internalType","_token","_x34","_x35","_x33","_x32","alias","getCustomAddress","setCustomAddress","customAddress","_ref49","_callee38","error_callback","config","_args38","_context38","catch","_x42","makeEtherscanApiRequest","_ref50","_callee39","apiKeyIndex","apiKey","_args39","_context39","_x43","_ref51","_callee40","return_data","_args40","_context40","_x44","code","errorCode","split","array","prop","shift","configs","checkUrlOrigin","baseURL","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee41","page","googlePageviewInfo","isOrigin","_args41","_context41","ga","_ref53","_callee43","googleEventsInfo","debugEnabled","originOk","currentNetwork","_args43","_context43","addPostfixForTestnet","availableNetworks","_ref54","_callee42","_context42","hitCallback","hitCallbackFail","_x46","_x47","_x45","createContract","_ref55","_callee44","_context44","Contract","_x48","_x49","_x50","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee47","activeOnly","whitelist","proposals","currTime","validProposals","_args47","_context47","getCachedData","addr","msg","payload","end","_ref57","_callee46","checkedStrategies","_context46","snapshot","metadata","strategies","_ref58","_callee45","_context45","symbol","_x52","_x51","_ref59","_callee48","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args48","_context48","rates","_x53","getTokenExchangeRate","_ref60","_callee49","exchangeRateParams","exchangeRate","_context49","_x54","_x55","getTokenDecimals","_ref61","_callee50","_context50","_x56","aprs","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee51","idleTokenConfig","feeDistributorConfig","etherscanEndpoint","etherscanTxlist","_context51","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee52","contractPaused","_args52","_context52","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref64","_callee54","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context54","lastAllocationsPromise","_ref65","_callee53","lastAllocations","_context53","_x58","_x59","alloc","_x57","checkMigration","_ref66","_callee55","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context55","getContractBalance","_x60","_x61","_ref67","_callee56","eventName","_args56","_context56","getContractPastEvents","_x62","_x63","estimateMethodGasUsage","_ref68","_callee57","methodParams","_contract$methods","functionCall","gasLimit","_ref69","_ref70","_args57","_context57","methods","getGasPrice","estimateGas","_x64","_x65","_ref71","_callee58","userAddress","signedParameters","callback_receipt","_contract$methods2","_context58","on","once","confirmationNumber","receipt","_x66","_x67","_x68","_x69","_x70","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","chainId","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref72","_callee59","biconomyInfo","res","_context59","limits","apiId","headers","x-api-key","_x71","sendTxWithPermit","_ref73","_callee60","_contract$methods3","messageToSign","_this$getSignaturePar","_context60","encodeABI","_address","personal","sign","_x72","_x73","_x74","_x75","_x76","_x77","buildBiconomyErc20ForwarderTx","_ref74","_callee61","tokenAddress","permitType","callData","buildParams","_context61","txGas","erc20ForwarderClient","buildTx","_x78","_x79","_x80","_x81","_x82","_ref75","_callee63","_context63","_ref76","_callee62","_context62","_x84","_x85","_x83","sendBiconomyTxWithErc20Forwarder","_ref77","_callee64","req","metaInfo","txResponse","fetchReceiptIntervalId","_context64","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x86","_x87","_x88","_x89","sendBiconomyTxWithPersonalSign","_ref78","_callee65","_this$getSignaturePar2","_context65","getNonce","call","_x90","_x91","_x92","_x93","signPermitEIP2612","_ref79","_callee66","erc20Name","owner","spender","deadline","domain","permit","domainData","_context66","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x94","_x95","_x96","_x97","_x98","_x99","_x100","_x101","signPermit","_ref80","_callee67","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args67","_context67","net","getId","round","nonceMethod","pow","allowed","response","_x102","_x103","_x104","_ref81","_callee68","permitParams","methodAbi","useNonce","_args68","_context68","_jsonInterface","f","inputs","unshift","_x105","_x106","_x107","_x108","_x109","_x110","_x111","sendSignedTx","_ref82","_callee69","MetaTransaction","dataToSign","_context69","_x112","_x113","_x114","_x115","_x116","checkTokenApproved","_ref83","_callee70","contractAddr","walletAddr","_ref84","_ref85","allowance","_context70","getAllowance","gte","_x117","_x118","_x119","_ref86","_callee71","_context71","_x120","_x121","_x122","contractMethodSendWrapperWithValue","txData","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref87","_callee72","stakedBalance","_args72","_context72","_x123","_x124","_ref88","_callee73","field","_args73","_context73","_x125","_x126","_x127","_x128","_x129","_x130","_x131","_x132","_ref89","_callee74","formatValue","tranchePool","_ref90","_ref91","staked1","lastPrice1","_ref92","_ref93","deposited1","lastPrice","idleGovTokenConfig","rewardsTokensInfo","_ref94","_ref95","rewardsTokens","incentiveTokens","govTokens","_args74","_context74","AA","BB","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x133","_x134","_x135","_x136","_x137","_x138","_x139","loadAssetField","_ref96","_callee75","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref97","_ref98","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref99","_ref100","amountLentCurve1","redeemableBalanceCurve","_ref101","_ref102","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref103","_ref104","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref105","_ref106","tokenPriceFirstDeposit","_ref107","_ref108","daysFirstDeposit","earningsPerc","depositTimestamps","_govTokenConfig","_ref109","_ref110","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref111","_ref112","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref113","_ref114","amountLentCurve2","redeemableBalanceCurve1","_ref115","_ref116","redeemableBalance2","_args75","_context75","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x140","_x141","_x142","_x143","getIdleTokenSupply","_ref117","_callee76","idleTokenSupply","_args76","_context76","getTokenTotalSupply","_x144","getIdleTokenPriceWithFee","_ref118","_callee77","_ref119","_ref120","fee","priceWFee","_args77","_context77","eq","_x145","_x146","_ref121","_callee78","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args78","_context78","_x147","clearCachedData","useLocalStorage","expirationDate","_ref122","_callee79","_ref123","_ref124","idleTokensTotalSupply","userShare","_context79","_x148","_x149","_callee81","coverProtocolConfig","nexusMutualConfig","_args81","_context81","_ref126","_callee80","coverage","coverageTokens","protocolImage","_context80","tokens","initContract","expirationTimestamp","utc","_x150","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref127","_callee83","incidentsInfo","_ref128","_ref129","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context83","directProps","startBlock","contractInfo","buyer","_ref130","_callee82","cover","coverId","claimSubmittedEvent","_ref131","_ref132","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref133","_ref134","_context82","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x152","_x151","getBatchedDepositExecutions","_ref135","_callee84","_context84","_x153","getBatchedDeposits","_callee86","filter_by_status","batchDepositConfig","batchedDeposits","_args86","_context86","_ref137","_callee85","currBatchIndex","batchIndex","_ref138","_ref139","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context85","_x154","getETHBalance","_ref140","_callee87","fixDecimals","_args87","_context87","_x155","_ref141","_callee88","_ref142","_ref143","_args88","_context88","_x156","_x157","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","match","_ref144","_callee89","totalSupply","_args89","_context89","_x158","_ref145","_callee90","_args90","_context90","_x159","_ref146","_callee91","_args91","_context91","_x160","_x161","getProtocolBalance","_ref147","_callee92","_context92","_x162","_x163","getAprs","_ref148","_callee93","_context93","addresses","_x164","genericIdleCall","_ref149","_callee94","callParams","_args94","_context94","_x165","_ref150","_callee95","_contract$methods4","_args95","_context95","_x166","_x167","getTxDecodedLogs","_ref151","_callee97","logAddr","decodeLogs","internalTransfers","_context97","_ref152","_callee96","_context96","_x172","_x173","_x168","_x169","_x170","_x171","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee98","_context98","_ref154","_callee99","_context99","getBlock","_x174","_ref155","_callee100","_args100","_context100","getPastEvents","_x175","_x176","_ref156","_callee101","_args101","_context101","_x177","_x178","_ref157","_callee102","_contract$methods5","_args102","_context102","_x179","_x180","_ref158","_callee103","_args103","_context103","_x181","_x182","getUnlentBalance","_ref159","_callee104","unlentBalance","_context104","_x183","_ref160","_callee105","_args105","_context105","_x184","_ref161","_callee107","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_ref165","_ref166","_args107","_context107","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref162","_callee106","_ref163","_ref164","protocolBalance","protocolAllocation","_context106","functions","_x186","_x187","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x185","getSushiswapPoolTokenPrice","_ref167","_callee108","pairAddresses","_ref168","_ref169","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref170","_ref171","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context108","getSushiswapConversionRate","_x188","_x189","_ref172","_callee109","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context109","_x190","_x191","_ref173","_callee110","unires","_context110","addressForPrice","_x192","_x193","getCurveDepositedTokens","_ref174","_callee111","idleTokensBalances","remainingCurveTokens","_args111","_context111","_x194","getCurveUnevenTokenAmounts","_ref175","_callee112","amounts","max_burn_amount","unevenAmounts","_context112","getCurveDepositContract","_x195","_x196","_callee113","curveRatesInfo","_context113","strategyTokens","getCurveAPYContract","_callee114","blocksForPrevTokenPrice","_ref178","_ref179","prevTokenPrice","blocksMultiplier","curveAPR","_context114","getCurveTokenSupply","_callee115","_context115","getCurvePoolContract","_callee116","_args116","_context116","_callee117","_args117","_context117","_ref183","_callee118","_ref184","_ref185","_context118","_x197","_callee119","depositContractInfo","_context119","getCurveZapContract","_callee120","zapContractInfo","_context120","_callee121","poolContractInfo","_context121","getCurveSwapContract","_callee122","migrationContractInfo","_context122","getCurveIdleTokensAmounts","_callee124","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args124","_context124","_ref191","_callee123","coinIndex","curveIdleTokens","_context123","migrationParams","_x198","getCurveTokensAmounts","_callee126","useCoinIndex","_args126","_context126","_ref193","_callee125","_ref194","_ref195","idleTokenPrice","totalTokenSupply","_context125","_x199","getCurveAmounts","_ref196","_callee128","_args128","_context128","_ref197","_callee127","_context127","_x202","_x200","_x201","getCurveTokenAmount","_ref198","_callee129","_args129","_context129","_x203","getCurveSlippage","_ref199","_callee130","uneven_amounts","depositContract","_ref200","_ref201","virtualPrice","Sv","_args130","_context130","_x204","_x205","_ref202","_callee131","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref203","_ref204","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args131","_context131","_x206","_callee133","_args133","_context133","_ref206","_callee132","_ref207","_ref208","_context132","_x207","getStkAaveApr","_ref209","_callee134","aaveConversionRate","stkAaveAPR","destTokenConfig","stkAaveValue","_args134","_context134","_x208","_x209","getCompAPR","_ref210","_callee135","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args135","_context135","_x210","_x211","getCompSpeed","_ref211","_callee136","cTokenAddress","compSpeed","_context136","_x212","_ref212","_callee137","cTokenInfo","compoundAllocationPerc","_ref213","_ref214","cTokenTotalSupply","compoundPoolShare","_args137","_context137","_x213","_callee139","_args139","_context139","_ref216","_callee138","_ref217","_ref218","_context138","_x214","_callee141","_args141","_context141","_ref220","_callee140","_ref221","_ref222","compApr","_context140","_x215","getTokensCsv","_callee144","csv","_context144","prototype","sum","pv","cv","avg","_ref224","_callee143","strategy","_context143","_ref225","_callee142","header","aprAvg","scoreAvg","lastRow","_context142","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x217","_x216","_callee146","govToken","convertToken","_args146","_context146","_ref227","_callee145","compTokenBalance","_context145","_x218","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref228","_callee148","govTokensUserDistribution","_args148","_context148","_ref229","_callee147","_context147","_x220","_x219","_ref230","_callee150","govTokensDistribution","tokenGovTokens","_args150","_context150","_ref231","_callee149","govSpeed","_context149","_x222","_x221","getGovTokensAprs","_ref232","_callee152","govTokensAprs","_args152","_context152","_ref233","_callee151","_ref234","_ref235","_ref236","_ref237","cTokenConfig","_context151","aprTooltipMode","_x225","_x223","_x224","_callee154","_args154","_context154","_ref239","_callee153","govTokenBalance","tokenConversionRate","fromTokenConfig","_context153","_x226","_callee155","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args155","_context155","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref241","_callee157","govTokensAmounts","_context157","getGovTokensUserAmounts","_ref242","_callee156","_context156","getGovTokenAddessByIndex","_x229","_x230","_x227","_x228","_ref243","_callee158","_context158","_x231","_x232","_ref244","_callee159","_context159","_x233","_x234","_callee162","govTokenConfigForced","_args162","_context162","_ref246","_callee161","_context161","_ref247","_callee160","_context160","_x236","_x237","_x235","getTokenFees","_callee163","_args163","_context163","_callee164","_ref250","_ref251","feePercentage","gain","fees","_args164","_context164","_ref252","_callee165","_args165","_context165","_x238","getTotalTVL","_callee166","tokensTVL","_context166","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee170","_context170","_ref255","_callee169","_context169","_ref256","_callee168","oldTokenTVL","idleTokenName","_ref257","_ref258","oldTokenConfig","_ref262","_ref263","oldTokenPrice","oldTotalSupply","_context168","showAUM","_ref259","_callee167","_ref260","_ref261","govTokenConversionRate","govTokenBalanceConverted","_context167","_x241","oldProtocols","oldProtocol","protocolPos","_x240","_x239","getSubstackLatestFeed","_callee171","endpointInfo","idleSubstackFeed","latestFeed","_context171","items","getAggregatedStats","_callee172","tvls","totalAUM","_args172","_context172","getAggregatedStats_chain","_callee176","avgAPR","_args176","_context176","_ref267","_callee175","_context175","_ref268","_callee174","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context174","_ref269","_callee173","_ref270","_ref271","_context173","_x244","_x243","_x242","getTokenApy","_ref272","_callee177","_context177","_x245","getTokensToMigrate","_callee180","tokensToMigrate","_args180","_context180","_ref274","_callee179","_context179","_ref275","_callee178","_ref276","_context178","_x247","_x246","getProtocolsTokensBalances","_callee182","tokenBalances","minTokenBalance","protocolsTokens","_args182","_context182","_ref278","_callee181","tokenContract","_context181","_x248","_ref279","_callee183","_args183","_context183","_x249","_x250","_x251","getAvgAPYStats","_ref280","_callee184","apiResults","_args184","_context184","_x252","_x253","_ref281","_callee185","count","_conversionRate","_args185","_context185","_x254","_x255","getTokenScore","_ref282","_callee186","_ref283","_ref284","tokenScore","_context186","protocolScore","getTokenScoreApi","_x256","_x257","_ref285","_callee187","scores","_context187","_x258","_x259","_ref286","_callee190","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args190","_context190","_ref287","_callee189","addrIndex","protocolApr","protocolApy","govTokenAPR","_context189","_ref288","_callee188","_context188","_x263","_x261","_x262","_x260","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","FieldComponent","rowProps","colInfo","colIndex","visible","fieldIndex","colProps","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","h4","description","placement","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","getInitParams","render","goBack","preventDefault","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","async","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imageSrc","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","Staking","selectedOption","toolProps","SelectedComponent","AssetField","FlexLoader","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","required","checked","togglePermitEnabled","approveDescription","balanceSelectorInfo","ConnectBox","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","cdoCoolingPeriod","latestHarvestBlock","stakeCoolingPeriod","userStakeBlock","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","hex","borderBottom","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","selectedSection","TranchePage","loadTransactions","src_TrancheDetails_TrancheDetails","TransactionsList","transactionsList","availableActions","TranchesList","enabledProtocols","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","earningsEnd","earningsStart","PortfolioEquityTranches","ChartCustomTooltip","ChartCustomTooltipRow","Tranches","userHasFunds","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","urlParams","param2","param1","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","portfolioDonutData","balanceValue","trancheName","balanceInfo","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquityTranches_PortfolioEquityTranches","src_TranchesList_TranchesList","selectTranche","showTooltip","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","rewardMultiplier","accountingData","successMessage","rewardTokenPrice","tokenWrapperProps","distributionSpeed","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","rewardToken","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","_this5","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","setAction","IdleStaking","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalClaimed","event","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","Button","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionParams","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","param3","paramIsValidToken","changeSelectedToken","baseEndpoint","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","StrategyPage","aggregatedValues","remainingTokens","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","totalBalanceWithScore","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","strategyConfig","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","appName","forumURL","darkModeEnabled","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","COMP","stkAAVE","aToken","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","rgb","stake","unstake","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","best","descLong","descShort","risk","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","42","1337","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","nexus","etherscan","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","tools","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","Tos","h2","h3","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","maxHeight","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","IdleCDO","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this9","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","TransactionListFilters","isOpened","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","componentHasChildren","fieldPath","customFieldName","customFieldProps","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.b917f12d.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         isDisabled={this.props.isDisabled}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// import { Line } from '@nivo/line';\n// import CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // console.log('TrancheField - loadField',fieldName,this.componentUnmounted,this.props.protocol,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    // const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    // const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const tranchePrice = await this.loadTrancheFieldRaw('lastTranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!tranchePrice.isNaN() && !tokenBalance.isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheField('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const previousHarvest = transfers.length>1 ? transfers[transfers.length-2] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const previousBlock = previousHarvest ? previousHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(previousBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n\n          const elapsedBlocks = latestHarvest.blockNumber-previousBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n          const transferAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const tokensPerBlock = transferAmount.div(elapsedBlocks);\n          const tokensPerSecond = transferAmount.div(elapsedSeconds);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.token,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (poolSize){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField(`tranchePool`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField(`tranchePool`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let tranchePool = await this.genericContractCallCached(tokenConfig.CDO.name,'virtualBalance',[trancheConfig.address]);\n        // console.log('tranchePool',tokenConfig,trancheConfig,output);\n        if (tranchePool){\n          output = this.fixTokenDecimals(tranchePool,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n        // staked = staked || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'lastTranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'lastTranchePrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`lastTranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheField(`lastTranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLEDistribution':\n        const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n          }\n          // console.log('trancheIDLEDistribution',rewardsTokensInfo.IDLE,output);\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(tokenConfig.CDO.name,'getRewards'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' ? rewardsTokens.filter( rewardTokenAddr => !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]);\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n\n      if (!protocolInfo.enabled){\n        return;\n      }\n\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    [\n      tokenAllocation.totalAllocationConverted,\n      tokenAllocation.totalAllocationWithUnlentConverted\n    ] = await Promise.all([\n      this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig),\n      this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig)\n    ]);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import { Flex, Text } from \"rimble-ui\";\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      blockNumber,\n      tokenBalance,\n      trancheBalance,\n      cdoCoolingPeriod,\n      latestHarvestBlock,\n      stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n    // console.log('loadData',cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock);\n\n    const canUnstake = this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    this.setState({\n      activeModal:'share'\n    })\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            style:{\n              border:`3px solid ${trancheDetails.color.hex}`\n            }\n          }}\n          titleProps={{\n            pb:2,\n            fontSize:[3,4]\n          }}\n          titleParentProps={{\n            ml:0,\n            mt:0,\n            mb:3,\n            style:{\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }\n          }}\n          title={trancheDetails.name}\n        >\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            py={2}\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              width={0.33}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Deposited\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:4,\n                    fontWeight:2,\n                    fontSize:[2,4],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              width={0.33}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staked\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:4,\n                    fontWeight:2,\n                    fontSize:[2,4],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              width={0.33}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Redeemable\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheRedeemable',\n                  props:{\n                    decimals:4,\n                    fontWeight:2,\n                    fontSize:[2,4],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n          </Flex>\n          {\n            this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      icon={'LightbulbOutline'}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        fontSize:'15px',\n                        textAlign:'center',\n                        color:'flashColor'\n                      }}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\nimport TransactionsList from '../TransactionsList/TransactionsList';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadTransactions();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() ) : [];\n    this.setState({\n      transactions\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[2,0]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              {...this.props}\n              text={'Tranches'}\n              isMobile={this.props.isMobile}\n              path={[this.functionsUtil.capitalize(this.props.selectedProtocol),this.props.selectedToken]}\n              handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            \n          </Flex>\n        </Flex>\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - Tranche\n        </Title>\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            width={[1,0.47]}\n            flexDirection={'column'}\n          >\n            <TrancheDetails\n              {...this.props}\n              selectedTranche={'AA'}\n              cdoConfig={this.props.tokenConfig.CDO}\n              trancheConfig={this.props.tokenConfig['AA']}\n            />\n          </Flex>\n          <Flex\n            width={[1,0.47]}\n            flexDirection={'column'}\n          >\n            <TrancheDetails\n              {...this.props}\n              selectedTranche={'BB'}\n              cdoConfig={this.props.tokenConfig.CDO}\n              trancheConfig={this.props.tokenConfig['BB']}\n            />\n          </Flex>\n        </Flex>\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n\n        // console.log(timeStamp,token,filteredBalances,foundBalances);\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    portfolioLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n    const selectedToken = this.props.urlParams.param2;\n    const selectedProtocol = this.props.urlParams.param1;\n    const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n    if (tokenConfig){\n      this.setState({\n        tokenConfig,\n        selectedToken,\n        selectedProtocol,\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      const route = `${this.props.selectedSection.route}/${protocol}/${token}`;\n      // console.log('selectTranche',route);\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              tokenConfig={this.state.tokenConfig}\n              selectedToken={this.state.selectedToken}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={3}\n              >\n                Tranches\n              </Title>\n              {\n                this.state.portfolioLoaded && this.functionsUtil.BNify(this.state.portfolio.totalBalance).gt(0) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.27,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.21, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:'SENIOR APY',\n                      props:{\n                        width:[0.29,0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ]\n                    },\n                    {\n                      title:'JUNIOR APY',\n                      props:{\n                        width:[0.29,0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'GOVERNANCE TOKENS',\n                      props:{\n                        width:[0.25,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:this.props.account === null,\n                      props:{\n                        width:[ this.props.account === null ? 0.29 : 0 ,0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}%).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    const distributedRewards = etherscanRewardsTxs.map( tx => (\n      {\n        hash:tx.hash,\n        tokenName:tx.tokenSymbol,\n        amount:this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals),\n        date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n      }\n    ));\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n      const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n      totalClaimed = totalClaimed.plus(claimedAmount);\n      return totalClaimed;\n    },this.functionsUtil.BNify(0));\n\n    const totalRewards = claimableRewards ? totalClaimed.plus(claimableRewards) : this.functionsUtil.BNify(0);\n    const totalRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[3] : this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport Tranches from '../Tranches/Tranches';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield','idleFEIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  tranches:{\n    BB:{\n      color:{\n        hex:'#2196f3',\n        rgb:[33, 150, 243],\n        hsl:['207', '90%', '54%']\n      },\n      name:'Junior Tranche',\n      description:{\n        deposit:'By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    },\n    AA:{\n      color:{\n        hex:'#4caf50',\n        rgb:[76, 175, 80],\n        hsl:['122', '39%', '49%']\n      },\n      name:'Senior Tranche',\n      description:{\n        deposit:'By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    }\n  },\n  strategies:{\n    tranches:{\n      token:'DAI',\n      visible:false,\n      type:'tranche',\n      protocol:'idle',\n      color:'#f32121',\n      comingSoon:false,\n      title:'Tranches',\n      addGovTokens:true,\n      titlePostfix:null,\n      iconName:'Whatshot',\n      component: Tranches,\n      govTokensEnabled:true,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/tranches-on.png',\n      iconInactive:'images/strategies/tranches-off.png',\n      iconInactiveDark:'images/strategies/tranches-white.png',\n      desc:'Diversify your risk profile with dynamic tranched yield derivatives',\n    },\n    best:{\n      token:'DAI',\n      visible:true,\n      color:'#f32121',\n      type:'strategy',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      visible:true,\n      color:'#2196F3',\n      type:'strategy',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      FEI:{\n        decimals:18,\n        enabled:false,\n        color:{\n          hex:'#229b6e',\n          rgb:[34, 155, 110],\n          hsl:['158', '64%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-07-30',\n        conversionRateField:'feiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              abi:IdleDepositForwarder,\n              permitType:'EIP2612_Permit',\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit', // 'foo'\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:true,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  events:{\n    DAI:{\n      fields:{\n        to:'dst',\n        from:'src',\n        value:'wad'\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'coverage',\n      label:'Coverage',\n      desc:'Buy Nexus Mutual coverage without KYC for your deposits',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  insurance:{\n    nexusMutual:{\n      label:'Nexus Mutual',\n      image:'images/protocols/nexus-mutual.png',\n      imageDark:'images/protocols/nexus-mutual-white.png'\n    },\n    coverProtocol:{\n      label:'Cover Protocol',\n      image:'images/protocols/cover-logo.svg',\n      imageDark:'images/protocols/cover-logo.svg',\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI','FEI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:12875386,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0x675a1378777cc2d25dbf430a28738cb6b7a3f8c2'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0xa8c7b9c4F18B227Abc4b099bA92d6a1CfEb9649C'\n        },\n        label:'idleDAI AA',\n        blockNumber:12875386,\n        name:'IdleCDO_AA_idleDAIYield',\n        token:'IdleCDO_AA_idleDAIYield',\n        address:'0xe524EE80584b120c4df8c2f130AE571ed6C196DB'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x0962fB33A7E0172d0E413b0fab003bEe5142E6B6'\n        },\n        label:'idleDAI BB',\n        blockNumber:12875386,\n        name:'IdleCDO_BB_idleDAIYield',\n        token:'IdleCDO_BB_idleDAIYield',\n        address:'0x95a2834AFDC65dd7f28585d2d992367600afb457'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    window.clearCachedData = this.clearCachedData;\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      availableTranches={availableTranches}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          availableTranches={availableTranches}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n"],"sourceRoot":""}